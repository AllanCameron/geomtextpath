[{"path":"https://allancameron.github.io/geomtextpath/articles/aesthetics.html","id":"aesthetics","dir":"Articles","previous_headings":"","what":"Aesthetics","title":"Aesthetics","text":"Like ggplot2 layer, geom_textpath() recognises several aesthetics. Broadly, can divided three categories: Aesthetics shared geom_text(). include label, alpha, colour, family, fontface size. linewidth, acts size aesthetic path. linecolour, acts colour aesthetic path. Aesthetics specific geom_textpath() slightly altered meaning. applies following aesthetics: hjust, vjust spacing, explained . Note , group applies path, implying needs one label per path. Let’s build plot examine aesthetics.","code":"t <- seq(5, -1, length.out = 1000) * pi spiral <- data.frame(   x = sin(t) * 1000:1,   y = cos(t) * 1000:1 ) rhyme <- paste(   \"Like a circle in a spiral, like a wheel within a wheel,\",   \"never ending or beginning on an ever spinning reel\" )  p <- ggplot(spiral, aes(x, y, label = rhyme)) +   coord_equal(xlim = c(-1000, 1000), ylim = c(-1000, 1000)) p + geom_textpath(size  = 4)"},{"path":"https://allancameron.github.io/geomtextpath/articles/aesthetics.html","id":"horizontal-justification","dir":"Articles","previous_headings":"Aesthetics","what":"Horizontal justification","title":"Aesthetics","text":"hjust parameter text understood justification text along direction text, relative anchor point. coincides horizontal justification text angle exactly zero. geom_textpath(), anchor point, hjust parameter re-interpreted justification text along curve.","code":"p + geom_textpath(size  = 4, hjust = 0) +   labs(subtitle = \"hjust = 0\") p + geom_textpath(size  = 4, hjust = 1) +   labs(subtitle = \"hjust = 1\")"},{"path":"https://allancameron.github.io/geomtextpath/articles/aesthetics.html","id":"justification-of-multi-line-text","dir":"Articles","previous_headings":"Aesthetics > Horizontal justification","what":"Justification of multi-line text","title":"Aesthetics","text":"One potential downside interpreting hjust way, can’t used control horizontal justification multi-line text. Instead, controlling justification among multi-line text occurs halign parameter, can one \"left\", \"center\" \"right\". Note parameter doesn’t affect single-line text.","code":"# Separate text with newline rhyme_lines <- paste(   \"Like a circle in a spiral, like a wheel within a wheel,\",   \"never ending or beginning on an ever spinning reel\", sep = \"\\n\" ) p + geom_textpath(size  = 4, label = rhyme_lines, halign = \"left\") +   labs(subtitle = \"halign = 'left'\") p + geom_textpath(size  = 4, label = rhyme_lines, halign = \"right\") +   labs(subtitle = \"halign = 'right'\")"},{"path":"https://allancameron.github.io/geomtextpath/articles/aesthetics.html","id":"vertical-justification","dir":"Articles","previous_headings":"Aesthetics","what":"Vertical justification","title":"Aesthetics","text":"vjust parameter controls justification text orthogonal direction text. angle text zero, vertical justification. geom_textpath(), single direction text angles vary along curve. Instead, imagined offset path text placed. examples , vjust = 0 aligns bottom text curve, whereas vjust = 1 aligns top text curve.","code":"p + geom_textpath(size  = 4, vjust = 0) +   labs(subtitle = \"vjust = 0\") p + geom_textpath(size  = 4, vjust = 1) +   labs(subtitle = \"vjust = 1\")"},{"path":"https://allancameron.github.io/geomtextpath/articles/aesthetics.html","id":"path-cutting","dir":"Articles","previous_headings":"Aesthetics > Vertical justification","what":"Path cutting","title":"Aesthetics","text":"noted vjust outside [0,1] interval, text generally shouldn’t intersect path. , default behaviour longer cuts path text positions, can turned back setting cut_path = TRUE.  Inversely, can also turn path cutting expected intersect text.","code":"p + geom_textpath(size  = 4, vjust = 1.5) +   labs(subtitle = \"vjust = 1.5, default cut_path\") p + geom_textpath(size  = 4, vjust = 1.5, cut_path = TRUE) +   labs(subtitle = \"vjust = 1.5, cut_path = TRUE\") p + geom_textpath(size  = 4, vjust = 0.5) +   labs(subtitle = \"default cut_path\") p + geom_textpath(size  = 4, vjust = 0.5, cut_path = FALSE) +   labs(subtitle = \"cut_path = FALSE\")"},{"path":"https://allancameron.github.io/geomtextpath/articles/aesthetics.html","id":"spacing","dir":"Articles","previous_headings":"Aesthetics","what":"Spacing","title":"Aesthetics","text":"geom_textpath() tries decent job plotting text along curve, sometimes text can feel ‘tight’ ‘loose’. order adjust text spaced, spacing aesthetic positive values increasing spacing negative values decreases spacing. typography, also known ‘tracking’ text units measured 1/1000 em, wherein ‘em’ typographical space ‘—’ em-dash occupies.","code":"p + geom_textpath(size = 4, spacing = 100) +   labs(subtitle = \"spacing = 100\") p + geom_textpath(size = 4, spacing = -100) +   labs(subtitle = \"spacing = -100\")"},{"path":"https://allancameron.github.io/geomtextpath/articles/curved_polar.html","id":"curved-axis-labels","dir":"Articles","previous_headings":"","what":"Curved axis labels","title":"Curved Text in Polar Co-ordinates","text":"package includes new coord called coord_curvedpolar, almost identical coord_polar, draws curved axis labels around circumferential (theta) axis. native coord_polar ggplot produces horizontal axis labels, can show following example:  Whereas, want curved axis labels, can simply substitute coord_curvedpolar replacement coord_polar  usual theme adjustments available via theme(axis.text.x = element_text())  Note text normally upside automatically flipped improve legibility.","code":"df <- data.frame(Temperature = c(4.4, 4.6, 6.3, 8.7, 11.6, 14.1, 15.9, 15.5,                                  13.1, 9.7, 6.7, 4.3, 3.6, 3.9, 6.4, 9.7, 13.2,                                  15.8, 18, 17.8, 15.1, 11.2, 7.2, 4.4),                  City = rep(c(\"Glasgow\", \"Amsterdam\"), each = 12),                  Month = factor(rep(month.name, 2), month.name))  p <- ggplot(df, aes(Month, Temperature)) +       geom_col(aes(fill = City), position = position_dodge(width = 1)) +       geom_vline(xintercept = 1:13 - 0.5, color = \"gray90\") +       geom_hline(yintercept = 0:3 * 5, color = \"gray90\") +       scale_fill_manual(values = c(\"darkorange\", \"dodgerblue4\")) +       ggtitle(\"Average monthly temperature in Amsterdam and Glasgow\") +       theme_bw() +       theme(panel.border = element_blank(),             axis.text.x = element_text(size = 14),             axis.title.x = element_blank(),             panel.grid.major = element_blank())  p + coord_polar() p + coord_curvedpolar() p + coord_curvedpolar() +    theme(axis.text.x = element_text(face = 2, color = \"orangered3\", hjust = 0))"},{"path":"https://allancameron.github.io/geomtextpath/articles/curved_polar.html","id":"curved-labels","dir":"Articles","previous_headings":"","what":"Curved labels","title":"Curved Text in Polar Co-ordinates","text":"also straightforward create labels curve appropriately polar co-ordinates, using geom_textpath. Straight text paths Cartesian coordinates become curved polar coordinates.   can even construct complex diagrammatic plots:  flip nicely polar co-ordinates.","code":"df <- data.frame(x = c(1, 1000), y = 1, text = \"This is a perfectly flat label\")  p <- ggplot(df, aes(x, y, label = text)) +   geom_textpath(size = 6) +   ylim(c(0.9, 1.1)) p p + coord_polar(start = pi) df <- data.frame(x1 = c(seq(0, 10/6 * pi, pi/3),                   seq(0, 10/6 * pi, 2*pi/3)),            y1 = c(rep(2, 6), rep(-1, 3)),            x2 = c(seq(0, 10/6 * pi, pi/3)  + pi/3,                   seq(0, 10/6 * pi, 2*pi/3) + 2*pi/3),            y2 = c(rep(4, 6), rep(2, 3)),            group = letters[c(1:6, (1:3) * 2)],            alpha = c(rep(1, 6), rep(0.4, 3)))  p <- ggplot(df, aes(x1, y1)) +   geom_rect(aes(xmin = x1, xmax = x2, ymin = y1, ymax = y2, fill = group,                 alpha = alpha),             color = \"white\", size = 2) +   geom_textpath(data = data.frame(x1 = seq(0, 2 * pi, length = 300),            y1 = rep(0.5, 300),            label = rep(c(\"stats\", \"effects\", \"polar\"), each = 100)),            aes(label = label), linetype = 0, size = 8,            flip_inverted = TRUE) +   geom_textpath(data = data.frame(x1 = seq(0, 2 * pi, length = 300),            y1 = rep(3, 300),            label = rep(c(\"density\", \"smooth\", \"unique\", \"organic\",                          \"easy to use\", \"automatic\"),                         each = 50)),            aes(label = label), linetype = 0, size = 4.6, color = \"white\",            flip_inverted = TRUE) +   scale_y_continuous(limits = c(-5, 4)) +   scale_x_continuous(limits = c(0, 2*pi)) +   scale_fill_manual(values = c(\"deepskyblue3\", \"deepskyblue4\",                                \"green3\", \"green4\",\"tomato\", \"tomato2\")) +   scale_alpha_identity() +   theme_void() +   theme(legend.position = \"none\")   p p + coord_polar()"},{"path":"https://allancameron.github.io/geomtextpath/articles/gallery.html","id":"planetary-orbits","dir":"Articles","previous_headings":"","what":"Planetary orbits","title":"Gallery of Examples","text":"","code":"set.seed(1) planets <- c(\"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\") t  <- seq(0, pi * 2, len = 500) AU <- c(5.203, 9.539, 19.18, 30.06)  df <- data.frame(x = as.vector(outer(cos(t), AU)),                  y = as.vector(outer(sin(t), AU)),                  Planet = rep(planets, each = 500),                  position = rep(c(0.75, 0.2, 0.4, 0.1)))  ggplot(df, aes(x, y, color = Planet)) +   geom_point(inherit.aes = FALSE,               data = data.frame(x = runif(1000, -30, 30),                                y = runif(1000, -30, 30),                                intens = runif(1000)/2),              mapping = aes(x, y, alpha = intens), color = \"white\", size = 0.2) +   geom_textpath(aes(label = Planet), linewidth = 0.3,                 hjust = rep(c(0, 0.25, 0.75, 1), each = 500),                 vjust = 1.1, size = 5, flip_inverted = TRUE, fontface = 2) +   geom_point(data = df[c(170, 600, 1385, 1965),], size = c(4, 3.5, 1.5, 1.5)) +   geom_point(x = 0, y = 0, size = 5, color = \"#FFFFA0\", inherit.aes = FALSE) +   scale_alpha_identity() +   scale_color_manual(values = c(Jupiter = \"orangered\",                                 Uranus =\"violet\",                                  Neptune = \"skyblue\",                                  Saturn = \"gold\")) +   coord_equal() +   theme_void() +   theme(plot.background = element_rect(fill = \"black\"),         legend.position = \"none\")"},{"path":"https://allancameron.github.io/geomtextpath/articles/geomtextpath.html","id":"text-on-a-path","dir":"Articles","previous_headings":"","what":"Text on a path","title":"Introduction to geomtextpath","text":"goal geomtextpath package draw text curved path extension ggplot2 plotting library. already familiar ggplot2 geom_path() geom_text() geometries, can easily display path text.  geom_pathtext() extension follows ggplot2 conventions displays path text projecting text along curve.","code":"t <- seq(5, -1, length.out = 1000) * pi spiral <- data.frame(   x = sin(t) * 1000:1,   y = cos(t) * 1000:1 ) rhyme <- paste(   \"Like a circle in a spiral, like a wheel within a wheel,\",   \"never ending or beginning on an ever spinning reel\" )  p <- ggplot(spiral, aes(x, y)) +   coord_equal(xlim = c(-1000, 1000), ylim = c(-1000, 1000)) p + geom_path() + labs(subtitle = \"geom_path()\") p + geom_text(   data  = data.frame(x = 0, y = 0),   size  = 4, label = rhyme ) + labs(subtitle = \"geom_text()\") p + geom_textpath(   size  = 4, label = rhyme ) + labs(subtitle = \"geom_textpath()\")"},{"path":"https://allancameron.github.io/geomtextpath/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Allan Cameron. Author, maintainer. Teun van den Brand. Author.","code":""},{"path":"https://allancameron.github.io/geomtextpath/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Cameron , van den Brand T (2021). geomtextpath: Use Curved Text Ggplot2. https://allancameron.github.io/geomtextpath, https://teunbrand.github.io/geomtextpath.","code":"@Manual{,   title = {geomtextpath: Use Curved Text In Ggplot2},   author = {Allan Cameron and Teun {van den Brand}},   year = {2021},   note = {https://allancameron.github.io/geomtextpath, https://teunbrand.github.io/geomtextpath}, }"},{"path":[]},{"path":"https://allancameron.github.io/geomtextpath/index.html","id":"create-curved-text-in-ggplot2","dir":"","previous_headings":"","what":"Create curved text in ggplot2","title":"Use Curved Text In Ggplot2","text":"existing text-based geom layers ggplot2 (geom_text geom_label) ideal majority plots, since typically textual annotations short, straight line axes plot. However, occasions useful text follow curved path. may create recreate specific visual effect, may label circular / polar plot “natural” way.","code":""},{"path":"https://allancameron.github.io/geomtextpath/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Use Curved Text In Ggplot2","text":"can install development version geomtextpath GitHub :","code":"# install.packages(\"remotes\") remotes::install_github(\"AllanCameron/geomtextpath\")"},{"path":"https://allancameron.github.io/geomtextpath/index.html","id":"using-geomtextpath","dir":"","previous_headings":"","what":"Using geomtextpath","title":"Use Curved Text In Ggplot2","text":"installed, simply call: main function package, geom_textpath, functions much geom ggplot2, taking x co-ordinates, y co-ordinates text label aesthetic mapping. basic, allows label plotted arbitrary path, shown following example:  course, can create path data various “stat” transformations, generate labels grouping variables plotting. allows easy labeling density curves:  can also use stat_smooth get labelled trend lines scatterplots:  course, arbitrary functions can labelled paths created stat_function:","code":"library(geomtextpath) #> Loading required package: ggplot2 t <- seq(5, -1, length.out = 1000) * pi  spiral <- data.frame(x    = sin(t) * 1:1000,                       y    = cos(t) * 1:1000,                      text = paste(\"Like a circle in a spiral,\",                                   \"like a wheel within a wheel,\",                                   \"never ending or beginning,\",                                   \"on an ever spinning reel\")                      )  ggplot(spiral, aes(x, y, label = text)) +   geom_textpath(size = 7, vjust = 2, include_line = FALSE) +   coord_equal(xlim = c(-1500, 1500), ylim = c(-1500, 1500)) ggplot(iris, aes(x = Sepal.Length, colour = Species)) +   geom_textpath(aes(label = Species), stat = \"density\",                 size = 6, fontface = 2, hjust = 0.2, vjust = 0.3) ggplot(iris, aes(x = Sepal.Length, y = Petal.Length)) +   geom_point(alpha = 0.1) +   geom_textpath(aes(label = Species, colour = Species),                 stat = \"smooth\", method = \"loess\", formula = y ~ x,                 size = 7, linetype = 3, fontface = 2, linewidth = 1) +   scale_colour_manual(values = c(\"forestgreen\", \"deepskyblue4\", \"tomato4\")) +   theme_bw() ggplot() +    xlim(c(0, 1)) +    stat_function(geom = \"textpath\",                 fun = dgamma, color = \"red4\",                 label = \"gamma distribution with shape = 1\",                 size = 5, vjust = -0.2, hjust = 0.1, args = list(shape = 1)) +   stat_function(geom = \"textpath\",                 fun = dgamma, color = \"blue4\",                 label = \"gamma distribution with shape = 2\",                 size = 5, vjust = -0.2, hjust = 0.1, args = list(shape = 2)) +   stat_function(geom = \"textpath\",                 fun = dgamma, color = \"green4\",                 label = \"gamma distribution with shape = 3\",                 size = 5, vjust = -0.2, hjust = 0.1, args = list(shape = 3)) +   theme_bw()"},{"path":"https://allancameron.github.io/geomtextpath/index.html","id":"labelled-contour-lines","dir":"","previous_headings":"Using geomtextpath","what":"Labelled contour lines","title":"Use Curved Text In Ggplot2","text":"Adding labels level contour lines now simple specifying geom = \"textpath\" call stat_contour:  even stat_density2d:","code":"df <- expand.grid(x = seq(nrow(volcano)), y = seq(ncol(volcano))) df$z <- as.vector(volcano)  ggplot(df, aes(x, y, z = z)) +    geom_contour_filled() +    stat_contour(aes(label = after_stat(level)), geom = \"textpath\",                 bins = 6, size = 2.5) +    scale_fill_manual(values = terrain.colors(11)) +    theme(legend.position = \"none\") set.seed(1)  df  <- data.frame(x = rnorm(100), y = rnorm(100))  ggplot(df, aes(x, y)) +    stat_density2d(geom = \"textpath\", aes(label = after_stat(level))) +   theme_classic()"},{"path":"https://allancameron.github.io/geomtextpath/index.html","id":"controlling-text-position","dir":"","previous_headings":"Using geomtextpath","what":"Controlling text position","title":"Use Curved Text In Ggplot2","text":"Just like geom_text, vjust parameter controls vertical justification text, though geom_textpath text justified relative path rather single point. vjust parameter moves text line, line automatically “filled ”. short text labels applied long paths, need parameter control far along path text placed. use horizontal justification (hjust) parameter. behaviour vjust hjust parameters described detail “aesthetics” vignette. example text justified line path:","code":"ggplot(iris, aes(x = Sepal.Length, colour = Species)) +   geom_textpath(aes(label = Species), stat = \"density\",                 size = 6, fontface = 2, hjust = 0.2, vjust = -0.2)"},{"path":"https://allancameron.github.io/geomtextpath/index.html","id":"correction-of-angles-across-different-aspect-ratios","dir":"","previous_headings":"Using geomtextpath","what":"Correction of angles across different aspect ratios","title":"Use Curved Text In Ggplot2","text":"angle text continues follow path even aspect ratio plot changes, example, faceting. Compare faceting horizontally:  faceting vertically:  text continue rotate appropriately plotting window rescaled.","code":"p <- ggplot(iris, aes(x = Sepal.Length, colour = Species)) +        geom_textpath(aes(label = Species), stat = \"density\",                      size = 6, fontface = 2, hjust = 0.2, vjust = -0.2) +        scale_y_continuous(limits = c(0, 1.5))  p + facet_grid(.~Species) p + facet_grid(Species~.)"},{"path":"https://allancameron.github.io/geomtextpath/index.html","id":"plotmath-support","dir":"","previous_headings":"Using geomtextpath","what":"Plotmath support","title":"Use Curved Text In Ggplot2","text":"want use plotmath expressions can much geom_text. Just tell geom_textpath labels parsed using parse = TRUE  Note , due way grid package draws plotmath expressions, plotmath labels straight rather curved. However, example , still angled according gradient curve.","code":"lab <- expression(paste(\"y = \", frac(1, sigma*sqrt(2*pi)), \" \",                             plain(e)^{frac(-(x-mu)^2, 2*sigma^2)}))  df <- data.frame(x = seq(-2, 0, len = 100),                  y = dnorm(seq(-2, 0, len = 100)),                  z = as.character(lab))  ggplot(df, aes(x, y)) +    geom_textpath(aes(label = z), vjust = -0.2, hjust = 0.1, size = 8, parse = TRUE)"},{"path":"https://allancameron.github.io/geomtextpath/index.html","id":"text-paths-in-polar-coordinates","dir":"","previous_headings":"Using geomtextpath","what":"Text paths in polar coordinates","title":"Use Curved Text In Ggplot2","text":"Straight text paths Cartesian coordinates become curved polar coordinates.   included ability point-like text paths. sounds paradoxical, means geom_textpath can used drop-geom_text, behave much way, exception text automatically curve polar co-ordinates. best way show head--head comparison. Note p_text p_textpath made base plot data. normal Cartesian Co-ordinates essentially identical:   note difference switch polar co-ordinates:   default, labels upside (even mostly upside ) automatically flipped facing legible direction. can turned using flip_inverted = FALSE call geom_textpath. can even construct complex diagrammatic plots:  flip nicely polar co-ordinates.","code":"df <- data.frame(x = c(1, 1000), y = 1, text = \"This is a perfectly flat label\")  p <- ggplot(df, aes(x, y, label = text)) +   geom_textpath(size = 6, include_line = FALSE) +   ylim(c(0.9, 1.1))  p p + coord_polar() df <- data.frame(x = 1:4, y = c(4, 7, 6, 3),                  color = c(\"royalblue\", \"orangered\", \"deepskyblue4\", \"violet\"))  p <- ggplot(df, aes(x, y, color = color, label = color)) +        geom_point(size = 3) +        scale_color_identity() +        lims(x = c(0, 6), y = c(0, 8)) +        theme_bw()  p_text     <- p + geom_text(size = 8, hjust = -0.1) p_textpath <- p + geom_textpath(size = 8, hjust = -0.1) p_text p_textpath p_text + coord_polar() p_textpath + coord_polar() p <- data.frame(x1 = c(seq(0, 10/6 * pi, pi/3),                   seq(0, 10/6 * pi, 2*pi/3)),            y1 = c(rep(2, 6), rep(-1, 3)),            x2 = c(seq(0, 10/6 * pi, pi/3)  + pi/3,                   seq(0, 10/6 * pi, 2*pi/3) + 2*pi/3),            y2 = c(rep(4, 6), rep(2, 3)),            group = letters[c(1:6, (1:3) * 2)],            alpha = c(rep(1, 6), rep(0.4, 3))) |>   ggplot(aes(x1, y1)) +   geom_rect(aes(xmin = x1, xmax = x2, ymin = y1, ymax = y2, fill = group,                 alpha = alpha),             color = \"white\", size = 2) +   geom_textpath(data = data.frame(x1 = seq(0, 2 * pi, length = 300),            y1 = rep(0.5, 300),            label = rep(c(\"stats\", \"effects\", \"polar\"), each = 100)),            aes(label = label), linetype = 0, size = 8,            flip_inverted = TRUE) +   geom_textpath(data = data.frame(x1 = seq(0, 2 * pi, length = 300),            y1 = rep(3, 300),            label = rep(c(\"density\", \"smooth\", \"unique\", \"organic\",                          \"easy to use\", \"automatic\"),                         each = 50)),            aes(label = label), linetype = 0, size = 4.6, color = \"white\",            flip_inverted = TRUE) +   scale_y_continuous(limits = c(-5, 4)) +   scale_x_continuous(limits = c(0, 2*pi)) +   scale_fill_manual(values = c(\"deepskyblue3\", \"deepskyblue4\",                                \"green3\", \"green4\",\"tomato\", \"tomato2\")) +   scale_alpha_identity() +   theme_void() +   theme(legend.position = \"none\")   p p + coord_polar()"},{"path":"https://allancameron.github.io/geomtextpath/index.html","id":"coord_curvedpolar","dir":"","previous_headings":"","what":"coord_curvedpolar","title":"Use Curved Text In Ggplot2","text":"Another function exported package coord_curvedpolar. behaves identically coord_polar, except circumferential axis labels curved. example:   can useful achieve particular aesthetic effect (), can also practical utility axis labels long, can produce problems standard coord_polar:   can see examples vignettes.","code":"clock <- function(x) {      hours <- c(rep(x[1] %% 12 + tail(x, 1) / 60, 2), 0, 3)   minutes <- c(rep(tail(x, 1)/5, 2), 0, 5)    ggplot(as.data.frame(rbind(hours, minutes)), aes(V1, V3)) +        geom_segment(aes(xend = V2, yend = V4),                     size = c(3, 2.5), lineend = \"round\") +       geom_point(x = 0, y = 0, size = 5) +       scale_x_continuous(limits = c(0, 12), breaks = 1:12,                          label = as.roman) +       theme_void() +        theme(axis.text.x = element_text(size = 30, face = 2)) }  clock(03:35) + coord_polar() clock(19:15) + coord_curvedpolar() df <- data.frame(x = c(\"A long axis label\", \"Another long label\",                        \"The longest label of all\", \"Yet another label\"),                  y = c(8, 6, 10, 4))  p <- ggplot(df, aes(x, y)) +        geom_col(width = 0.5) +       theme(axis.text.x = element_text(size = 18))  p + coord_polar() p + coord_curvedpolar()"},{"path":"https://allancameron.github.io/geomtextpath/index.html","id":"limitations","dir":"","previous_headings":"","what":"Limitations","title":"Use Curved Text In Ggplot2","text":"limitations inherent plotting text elements ggplot due way underlying grid graphics handles text. text string dealt zero-width object, therefore rotation spacing letters making string can dealt treating letter separately. important realise letters rotated, undergo change shape. Thus, example, large text appearing convex curves deformed individual letters narrower bottom wider top. require reinterpreting letters polygons. Another issue may wish use short curved label much longer path. Spacing letters equally along path mean much space letters label remain legible. single text string therefore kept “together” according point size text geom_textpath.","code":""},{"path":"https://allancameron.github.io/geomtextpath/reference/GeomTextPath.html","id":null,"dir":"Reference","previous_headings":"","what":"The Geom object for a textpath — GeomTextpath","title":"The Geom object for a textpath — GeomTextpath","text":"ggproto class creates textpath layer. intended used directly end user.","code":""},{"path":"https://allancameron.github.io/geomtextpath/reference/coord_curvedpolar.html","id":null,"dir":"Reference","previous_headings":"","what":"Polar coordinates with curved text on x axis — coord_curvedpolar","title":"Polar coordinates with curved text on x axis — coord_curvedpolar","text":"Polar co-ordinates `ggplot2` help create range circular plots, can used present data visually appealing, user-friendly way. However, standard `coord_polar` uses `textGrob` render labels circumferential (theta) axis, meaning labels rotate curve line axis. `coord_curvedpolar` aims identical `coord_polar`, except text theta axis follows curve plot, correcting automatically resizing preserve letter spacing size.","code":""},{"path":"https://allancameron.github.io/geomtextpath/reference/coord_curvedpolar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Polar coordinates with curved text on x axis — coord_curvedpolar","text":"","code":"coord_curvedpolar(   theta = \"x\",   start = 0,   direction = 1,   clip = \"on\",   halign = c(\"center\") )"},{"path":"https://allancameron.github.io/geomtextpath/reference/coord_curvedpolar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Polar coordinates with curved text on x axis — coord_curvedpolar","text":"theta variable map angle (`x` `y`) start Offset starting point 12 o'clock radians. Offset applied clockwise anticlockwise depending value `direction`. direction 1, clockwise; -1, anticlockwise clip drawing clipped extent plot panel? setting `\"\"` (default) means yes, setting `\"\"` means . details, please see [`coord_cartesian()`]. halign Determines alignment multi-line text labels","code":""},{"path":"https://allancameron.github.io/geomtextpath/reference/coord_curvedpolar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Polar coordinates with curved text on x axis — coord_curvedpolar","text":"","code":"# A pie chart = stacked bar chart + polar coordinates pie <- ggplot(mtcars, aes(x = factor(1), fill = factor(cyl))) +  geom_bar(width = 1)  pie + coord_curvedpolar(theta = \"y\")   # Demonstrating curved category labels p <- ggplot(data.frame(x = paste(\"Category label\", 1:5), y = runif(5)),             aes(x, y, fill = x)) +        geom_col() +        theme_bw() +        theme(panel.border = element_blank(),              legend.position = \"none\",              axis.text.x = element_text(size = 10, vjust = 0.5))  # Standard bar chart in Cartesian Co-ordinates p   # Standard coord_polar axis labels p + coord_polar()   # Curved polar co-ordinate labels p + coord_curvedpolar()"},{"path":"https://allancameron.github.io/geomtextpath/reference/geom_textpath.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Curved Text Along Paths in ggplot2 — geom_textpath","title":"Add Curved Text Along Paths in ggplot2 — geom_textpath","text":"existing text-based geom layers ggplot2 (geom_text() geom_label()) ideal majority plots, since typically textual annotations short, straight line axes plot. However, occasions useful text follow curved path. may create recreate specific visual effect, may label circular / polar plot \"natural\" way.","code":""},{"path":"https://allancameron.github.io/geomtextpath/reference/geom_textpath.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Curved Text Along Paths in ggplot2 — geom_textpath","text":"","code":"geom_textpath(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   ...,   lineend = \"butt\",   linejoin = \"round\",   linemitre = 10,   include_line = TRUE,   cut_path = NA,   flip_inverted = TRUE,   halign = \"left\",   offset = NULL,   parse = FALSE,   keep_straight = FALSE )"},{"path":"https://allancameron.github.io/geomtextpath/reference/geom_textpath.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Curved Text Along Paths in ggplot2 — geom_textpath","text":"mapping Set aesthetic mappings created aes() aes_(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer, string. position Position adjustment, either string, result call position adjustment function. na.rm FALSE (default), missing points labels removed text path warning. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). ... arguments passed layer(). often aesthetics, used set aesthetic fixed value, like colour = \"red\" size = 3. may also parameters paired geom/stat. lineend Line end style (round, butt, square). linejoin Line join style (round, mitre, bevel). linemitre Line mitre limit (number greater 1). include_line logical(1), indicating whether line plotted along text (TRUE, default). FALSE, parameters aesthetics relating drawing path layer ignored. cut_path logical(1) TRUE breaks path two sections, one either side string. FALSE, path plotted whole. default, NA, break line string vjust 0 1. flip_inverted logical(1) TRUE, inverts string majority letters upside along path inverted improve legibility. default FALSE, leaves letters -. halign character(1) describing multi-line labels justified. Can either \"left\" (default), \"center\" \"right\". offset unit() length 1 determine offset text path. NULL, overrules vjust setting. parse set TRUE coerce labels expressions, allowing plotmath syntax used. keep_straight logical TRUE FALSE indicating whether text straight rather following curve. might helpful noisy paths. TRUE text still follow angle curve. default FALSE","code":""},{"path":"https://allancameron.github.io/geomtextpath/reference/geom_textpath.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add Curved Text Along Paths in ggplot2 — geom_textpath","text":"limitations inherent plotting text elements ggplot2 due way underlying grid graphics handles text. text string dealt zero-width object, therefore rotation spacing letters making string can dealt treating letter separately. important realise letters rotated, undergo change shape. Thus, example, large text appearing convex curves deformed individual letters narrower bottom wider top. require reinterpreting letters polygons. Another issue may wish use short curved label much longer path. Spacing letters equally along path mean much space letters label remain legible. single text string therefore kept \"together\" according point size text geom_textpath(). leaves problem path text placed. can dealt aesthetic mapping hjust, allows user place labels desired position along path, including separate positions label. final point note path usually group-based geom (.e. path typically comprises x, y points two columns several rows data frame), whereas text labels can come single rows data frame. means data frame x column, y column grouping variable column, can single label group. Typically, grouping variable (see examples, particularly using built-iris data set.)","code":""},{"path":"https://allancameron.github.io/geomtextpath/reference/geom_textpath.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Add Curved Text Along Paths in ggplot2 — geom_textpath","text":"spacing aesthetic allows fine control spacing text, called 'tracking' typography. default 0 units measured 1/1000 em. Numbers greater zero increase spacing, whereas negative numbers decrease spacing. geom_textpath() understands following aesthetics (required aesthetics bold): x y label alpha colour family fontface group hjust size vjust linetype linewidth linecolour spacing","code":""},{"path":"https://allancameron.github.io/geomtextpath/reference/geom_textpath.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Curved Text Along Paths in ggplot2 — geom_textpath","text":"","code":"# Plot text along an arbitrary path  t <- seq(-1, 5, length.out = 1000) * pi  spiral <- data.frame(    x = rev(sin(t) * 1000:1),    y = rev(cos(t) * 1000:1),    s = seq(1, 10, length.out = 100),    text = paste(      \"Like a circle in a spiral, like a wheel within a wheel,\",      \"never ending or beginning on an ever spinning reel\"   ) )   ggplot(spiral, aes(x, y, label = text)) +    geom_textpath(size = 7, vjust = 2, linewidth = 0) +    coord_equal(xlim = c(-1500, 1500), ylim = c(-1500, 1500))   # Produce labelled density lines:  # By default the paths are broken to allow the names in-line   ggplot(iris, aes(x = Sepal.Length, colour = Species)) +    geom_textpath(aes(label = Species), stat = \"density\",                  size = 6, fontface = 2, hjust = 0.2, vjust = 0.3)   # If the vjust parameter moves the text above or below the line, # the line is automatically filled in:   ggplot(iris, aes(x = Sepal.Length, colour = Species)) +    geom_textpath(aes(label = Species), stat = \"density\",                  size = 6, fontface = 2, hjust = 0.2, vjust = -0.2)   # Correction of angles across different aspect ratios:  # The angle of the text continues to follow the path even if the # aspect ratio of the plot changes, for example, during faceting. # Compare faceting horizontally:   p <- ggplot(iris, aes(x = Sepal.Length, colour = Species)) +         geom_textpath(aes(label = Species), stat = \"density\",                       size = 6, fontface = 2, hjust = 0.1, vjust = -0.2) +         scale_y_continuous(limits = c(0, 1.5))   p + facet_grid(.~Species) #> Warning: The text offset exceeds the curvature in one or more paths. This will result in #> displaced letters. Consider reducing the vjust or text size, or use the hjust #> parameter to move the string to a different point on the path.   # and faceting vertically:   p + facet_grid(Species~.)   # label groups of points along their trend line:   ggplot(iris, aes(x = Sepal.Length, y = Petal.Length)) +    geom_point(alpha = 0.1) +    geom_textpath(aes(label = Species, colour = Species),                  stat = \"smooth\", method = \"loess\", formula = y ~ x,                  size = 7, linetype = 3, fontface = 2, linewidth = 1) +    scale_colour_manual(values = c(\"forestgreen\", \"deepskyblue4\", \"tomato4\")) +    theme_bw()   # Straight text paths in Cartesian Co-ordinates curve in Polar Co-ordinates   df <- data.frame(x = 1:1000, y = 1, text = \"This is a perfectly flat label\")   p <- ggplot(df, aes(x, y, label = text)) +    geom_textpath(size = 6)  p   p + coord_polar(start = pi)"},{"path":"https://allancameron.github.io/geomtextpath/reference/geomtextpath-package.html","id":null,"dir":"Reference","previous_headings":"","what":"geomtextpath: Use Curved Text In Ggplot2 — geomtextpath-package","title":"geomtextpath: Use Curved Text In Ggplot2 — geomtextpath-package","text":"Allows text follow curved paths ggplot2.     allows neat labelling curves plots polar co-ordinates.","code":""},{"path":"https://allancameron.github.io/geomtextpath/reference/geomtextpath-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"geomtextpath: Use Curved Text In Ggplot2 — geomtextpath-package","text":"Maintainer: Allan Cameron Allan.Cameron@nhs.scot Authors: Teun van den Brand tahvdbrand@gmail.com (ORCID)","code":""},{"path":"https://allancameron.github.io/geomtextpath/reference/textpathGrob.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw text on a path. — textpathGrob","title":"Draw text on a path. — textpathGrob","text":"function creates (curved) text path.","code":""},{"path":"https://allancameron.github.io/geomtextpath/reference/textpathGrob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw text on a path. — textpathGrob","text":"","code":"textpathGrob(   label,   x = 0.5,   y = 0.5,   id = 1L,   just = \"centre\",   hjust = NULL,   vjust = NULL,   halign = \"left\",   angle = 0,   keep_straight = FALSE,   gp_text = gpar(),   gp_path = gpar(),   cut_path = NA,   flip_inverted = TRUE,   polar_params = NULL,   default.units = \"npc\",   name = NULL,   vp = NULL )"},{"path":"https://allancameron.github.io/geomtextpath/reference/textpathGrob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw text on a path. — textpathGrob","text":"label character vector. x numeric vector. y numeric vector. id numeric vector used separate locations x y multiple lines. locations id belong line. just justification text     relative (x, y) location.  two values, first     value specifies horizontal justification second value specifies     vertical justification.  Possible string values : \"left\",     \"right\", \"centre\", \"center\", \"bottom\",     \"top\".  numeric values, 0 means left (bottom) alignment     1 means right (top) alignment. hjust numeric vector specifying horizontal justification.     specified, overrides just setting. vjust numeric vector specifying justification orthogonal direction text. Alternatively unit() object directly set offset path. halign character(1) describing multi-line labels justified. Can either \"left\" (default), \"center\" \"right\". angle numeric vector either length 1 length id describing angle text rotated. keep_straight logical TRUE FALSE indicating whether text straight rather following curve. might helpful noisy paths. TRUE text still follow angle curve. default FALSE gp_text, gp_path object class \"gpar\", typically output call gpar() function. basically lists graphical parameters text path respectively. cut_path logical(1) TRUE breaks path two sections, one either side string. FALSE, path plotted whole. default, NA, break line string vjust 0 1. flip_inverted logical(1) TRUE, inverts string majority letters upside along path inverted improve legibility. default FALSE, leaves letters -. polar_params list consisting x, y, r component specifies central point radius circle around single-point labels wrapped. default.units string indicating default units use     x y     given numeric vectors. name character identifier. vp Grid viewport object (NULL).","code":""},{"path":"https://allancameron.github.io/geomtextpath/reference/textpathGrob.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw text on a path. — textpathGrob","text":"object class gTree, containing grobs.","code":""},{"path":"https://allancameron.github.io/geomtextpath/reference/textpathGrob.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw text on a path. — textpathGrob","text":"","code":"require(grid) #> Loading required package: grid  t <- seq(0, 2 * pi, length.out = 100) grob <- textpathGrob(   label = c(     \"Why I am making trigonometry jokes? Cos I can!\",     \"I was never any good at sine language.\"   ),   x = c(t, t) / (2 * pi),   y = c(cos(t), sin(t)) * 0.25 + 0.5,   id = rep(1:2, each = length(t)),   vjust = rep(0.5, 2 * length(t)),   gp_text = gpar(lineheight = c(1.2, 1.2), fontsize = c(10, 10)),   gp_path = gpar(lty = c(1, 2)) )  grid.newpage(); grid.draw(grob)"},{"path":"https://allancameron.github.io/geomtextpath/news/index.html","id":"geomtextpath-010","dir":"Changelog","previous_headings":"","what":"geomtextpath 0.1.0","title":"geomtextpath 0.1.0","text":"Added NEWS.md file track changes package. Plot text atop curve readability purposes. Support lineend, linejoin, linemitre parameters. Letter angles now stable regardless aspect ratios recomputed plot device resized (#6) Line breaks now implemented (#4) Added support user-defined text spacing. Text angles now correct straight paths. Duplicated labels now allowed. Multi-line text can justified horizontally using halign parameter.","code":""}]
