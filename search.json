[{"path":"https://allancameron.github.io/geomtextpath/articles/aesthetics.html","id":"aesthetics","dir":"Articles","previous_headings":"","what":"Aesthetics","title":"Aesthetics","text":"Like ggplot2 layer, geom_textpath() recognises several aesthetics. Broadly, can divided three categories: Aesthetics shared geom_text(). include label, alpha, colour, family, fontface size. linewidth, acts size aesthetic path. linecolour, acts colour aesthetic path. Aesthetics specific geom_textpath() slightly altered meaning. applies following aesthetics: hjust, vjust spacing, explained . Note , group applies path, implying needs one label per path. Let’s build plot examine aesthetics.","code":"t <- seq(5, -1, length.out = 1000) * pi spiral <- data.frame(   x = sin(t) * 1000:1,   y = cos(t) * 1000:1 ) rhyme <- paste(   \"Like a circle in a spiral, like a wheel within a wheel,\",   \"never ending or beginning on an ever spinning reel\" )  p <- ggplot(spiral, aes(x, y, label = rhyme)) +   coord_equal(xlim = c(-1000, 1000), ylim = c(-1000, 1000)) p + geom_textpath(size  = 4)"},{"path":"https://allancameron.github.io/geomtextpath/articles/aesthetics.html","id":"horizontal-justification","dir":"Articles","previous_headings":"Aesthetics","what":"Horizontal justification","title":"Aesthetics","text":"hjust parameter text understood justification text along direction text, relative anchor point. coincides horizontal justification text angle exactly zero. geom_textpath(), anchor point, hjust parameter re-interpreted justification text along curve.  situations may wish specify particular positions relative x y co-ordinates plot. circumstances text string aliases can used. “xmin”, “xmid”, “xmax”, “ymin”, “ymid”, “ymax” “auto”. first six self explanatory. example, can look effect setting hjust = \"ymax\". use different plot demonstrate:  “auto” hjust setting tries find straightest segments curves apply labels:","code":"p + geom_textpath(size  = 4, hjust = 0) +   labs(subtitle = \"hjust = 0\") p + geom_textpath(size  = 4, hjust = 1) +   labs(subtitle = \"hjust = 1\") i <- ggplot(iris, aes(x = Sepal.Length, colour = Species, label = Species)) +   ylim(c(0, 1.3))  i + geom_textpath(stat = \"density\", size = 5, fontface = 2, vjust = -0.2,                   hjust = \"ymax\") +    labs(subtitle = \"hjust = \\\"ymax\\\"\") i + geom_textpath(stat = \"density\", size = 5, fontface = 2, vjust = -0.2,                   hjust = \"auto\") +   labs(subtitle = \"hjust = \\\"auto\\\"\")"},{"path":"https://allancameron.github.io/geomtextpath/articles/aesthetics.html","id":"justification-of-multi-line-text","dir":"Articles","previous_headings":"Aesthetics > Horizontal justification","what":"Justification of multi-line text","title":"Aesthetics","text":"One potential downside interpreting hjust way, can’t used control horizontal justification multi-line text. Instead, controlling justification among multi-line text occurs halign parameter, can one \"left\", \"center\" \"right\". Note parameter doesn’t affect single-line text.","code":"# Separate text with newline rhyme_lines <- paste(   \"Like a circle in a spiral, like a wheel within a wheel,\",   \"never ending or beginning on an ever spinning reel\", sep = \"\\n\" ) p + geom_textpath(size  = 4, label = rhyme_lines, halign = \"left\") +   labs(subtitle = \"halign = 'left'\") p + geom_textpath(size  = 4, label = rhyme_lines, halign = \"right\") +   labs(subtitle = \"halign = 'right'\")"},{"path":"https://allancameron.github.io/geomtextpath/articles/aesthetics.html","id":"vertical-justification","dir":"Articles","previous_headings":"Aesthetics","what":"Vertical justification","title":"Aesthetics","text":"vjust parameter controls justification text orthogonal direction text. angle text zero, vertical justification. geom_textpath(), single direction text angles vary along curve. Instead, imagined offset path text placed. examples , vjust = 0 aligns bottom text curve, whereas vjust = 1 aligns top text curve.","code":"p + geom_textpath(size  = 4, vjust = 0) +   labs(subtitle = \"vjust = 0\") p + geom_textpath(size  = 4, vjust = 1) +   labs(subtitle = \"vjust = 1\")"},{"path":"https://allancameron.github.io/geomtextpath/articles/aesthetics.html","id":"path-cutting","dir":"Articles","previous_headings":"Aesthetics > Vertical justification","what":"Path cutting","title":"Aesthetics","text":"noted vjust outside [0,1] interval, text generally shouldn’t intersect path. , default behaviour longer cuts path text positions, can turned back setting gap = TRUE.  Inversely, can also turn path cutting expected intersect text.","code":"p + geom_textpath(size  = 4, vjust = 1.5) +   labs(subtitle = \"vjust = 1.5, default gap\") p + geom_textpath(size  = 4, vjust = 1.5, gap = TRUE) +   labs(subtitle = \"vjust = 1.5, gap = TRUE\") p + geom_textpath(size  = 4, vjust = 0.5) +   labs(subtitle = \"default gap\") p + geom_textpath(size  = 4, vjust = 0.5, gap = FALSE) +   labs(subtitle = \"gap = FALSE\")"},{"path":"https://allancameron.github.io/geomtextpath/articles/aesthetics.html","id":"spacing","dir":"Articles","previous_headings":"Aesthetics","what":"Spacing","title":"Aesthetics","text":"geom_textpath() tries decent job plotting text along curve, sometimes text can feel ‘tight’ ‘loose’. order adjust text spaced, spacing aesthetic positive values increasing spacing negative values decreases spacing. typography, also known ‘tracking’ text units measured 1/1000 em, wherein ‘em’ typographical space ‘—’ em-dash occupies.","code":"p + geom_textpath(size = 4, spacing = 100) +   labs(subtitle = \"spacing = 100\") p + geom_textpath(size = 4, spacing = -100) +   labs(subtitle = \"spacing = -100\")"},{"path":"https://allancameron.github.io/geomtextpath/articles/curved_polar.html","id":"curved-axis-labels","dir":"Articles","previous_headings":"","what":"Curved axis labels","title":"Curved Text in Polar Co-ordinates","text":"package includes new coord called coord_curvedpolar, almost identical coord_polar, draws curved axis labels around circumferential (theta) axis. native coord_polar ggplot produces horizontal axis labels, can show following example:  Whereas, want curved axis labels, can simply substitute coord_curvedpolar replacement coord_polar  usual theme adjustments available via theme(axis.text.x = element_text())  Note text normally upside automatically flipped improve legibility.","code":"df <- data.frame(Temperature = c(4.4, 4.6, 6.3, 8.7, 11.6, 14.1, 15.9, 15.5,                                  13.1, 9.7, 6.7, 4.3, 3.6, 3.9, 6.4, 9.7, 13.2,                                  15.8, 18, 17.8, 15.1, 11.2, 7.2, 4.4),                  City = rep(c(\"Glasgow\", \"Amsterdam\"), each = 12),                  Month = factor(rep(month.name, 2), month.name))  p <- ggplot(df, aes(Month, Temperature)) +       geom_col(aes(fill = City), position = position_dodge(width = 1)) +       geom_vline(xintercept = 1:13 - 0.5, color = \"gray90\") +       geom_hline(yintercept = 0:3 * 5, color = \"gray90\") +       scale_fill_manual(values = c(\"darkorange\", \"dodgerblue4\")) +       ggtitle(\"Average monthly temperature in Amsterdam and Glasgow\") +       theme_bw() +       theme(panel.border = element_blank(),             axis.text.x = element_text(size = 14),             axis.title.x = element_blank(),             panel.grid.major = element_blank())  p + coord_polar() p + coord_curvedpolar() p + coord_curvedpolar() +    theme(axis.text.x = element_text(face = 2, color = \"orangered3\", hjust = 0))"},{"path":"https://allancameron.github.io/geomtextpath/articles/curved_polar.html","id":"curved-labels","dir":"Articles","previous_headings":"","what":"Curved labels","title":"Curved Text in Polar Co-ordinates","text":"also straightforward create labels curve appropriately polar co-ordinates, using geom_textpath. Straight text paths Cartesian coordinates become curved polar coordinates.   can even construct complex diagrammatic plots:  flip nicely polar co-ordinates.","code":"df <- data.frame(x = c(1, 1000), y = 1, text = \"This is a perfectly flat label\")  p <- ggplot(df, aes(x, y, label = text)) +   geom_textpath(size = 6) +   ylim(c(0.9, 1.1)) p p + coord_polar(start = pi) df <- data.frame(x1 = c(seq(0, 10/6 * pi, pi/3),                   seq(0, 10/6 * pi, 2*pi/3)),            y1 = c(rep(2, 6), rep(-1, 3)),            x2 = c(seq(0, 10/6 * pi, pi/3)  + pi/3,                   seq(0, 10/6 * pi, 2*pi/3) + 2*pi/3),            y2 = c(rep(4, 6), rep(2, 3)),            group = letters[c(1:6, (1:3) * 2)],            alpha = c(rep(1, 6), rep(0.4, 3)))  p <- ggplot(df, aes(x1, y1)) +   geom_rect(aes(xmin = x1, xmax = x2, ymin = y1, ymax = y2, fill = group,                 alpha = alpha),             color = \"white\", size = 2) +   geom_textpath(data = data.frame(x1 = seq(0, 2 * pi, length = 300),            y1 = rep(0.5, 300),            label = rep(c(\"stats\", \"effects\", \"polar\"), each = 100)),            aes(label = label), linetype = 0, size = 8,            upright = TRUE) +   geom_textpath(data = data.frame(x1 = seq(0, 2 * pi, length = 300),            y1 = rep(3, 300),            label = rep(c(\"density\", \"smooth\", \"unique\", \"organic\",                          \"easy to use\", \"automatic\"),                         each = 50)),            aes(label = label), linetype = 0, size = 4.6, color = \"white\",            upright = TRUE) +   scale_y_continuous(limits = c(-5, 4)) +   scale_x_continuous(limits = c(0, 2*pi)) +   scale_fill_manual(values = c(\"deepskyblue3\", \"deepskyblue4\",                                \"green3\", \"green4\",\"tomato\", \"tomato2\")) +   scale_alpha_identity() +   theme_void() +   theme(legend.position = \"none\")   p p + coord_polar()"},{"path":"https://allancameron.github.io/geomtextpath/articles/gallery.html","id":"planetary-orbits","dir":"Articles","previous_headings":"","what":"Planetary orbits","title":"Gallery of Examples","text":"","code":"set.seed(1) planets <- c(\"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\") t  <- seq(0, pi * 2, len = 500) AU <- c(5.203, 9.539, 19.18, 30.06)  df <- data.frame(x = as.vector(outer(cos(t), AU)),                  y = as.vector(outer(sin(t), AU)),                  Planet = rep(planets, each = 500),                  position = rep(c(0.75, 0.2, 0.4, 0.1)))  ggplot(df, aes(x, y, color = Planet)) +   geom_point(inherit.aes = FALSE,               data = data.frame(x = runif(1000, -30, 30),                                y = runif(1000, -30, 30),                                intens = runif(1000)/2),              mapping = aes(x, y, alpha = intens), color = \"white\", size = 0.2) +   geom_textpath(aes(label = Planet), linewidth = 0.3,                 hjust = rep(c(0, 0.25, 0.75, 1), each = 500),                 vjust = 1.1, size = 5, upright = TRUE, fontface = 2) +   geom_point(data = df[c(170, 600, 1385, 1965),], size = c(4, 3.5, 1.5, 1.5)) +   geom_point(x = 0, y = 0, size = 5, color = \"#FFFFA0\", inherit.aes = FALSE) +   scale_alpha_identity() +   scale_color_manual(values = c(Jupiter = \"orangered\",                                 Uranus =\"violet\",                                  Neptune = \"skyblue\",                                  Saturn = \"gold\")) +   coord_equal() +   theme_void() +   theme(plot.background = element_rect(fill = \"black\"),         legend.position = \"none\")"},{"path":"https://allancameron.github.io/geomtextpath/articles/geomtextpath.html","id":"text-on-a-path","dir":"Articles","previous_headings":"","what":"Text on a path","title":"Introduction to geomtextpath","text":"goal geomtextpath package draw text curved path extension ggplot2 plotting library. already familiar ggplot2 geom_path() geom_text() geometries, can easily display path text.  geom_pathtext() extension follows ggplot2 conventions displays path text projecting text along curve.","code":"t <- seq(5, -1, length.out = 1000) * pi spiral <- data.frame(   x = sin(t) * 1000:1,   y = cos(t) * 1000:1 ) rhyme <- paste(   \"Like a circle in a spiral, like a wheel within a wheel,\",   \"never ending or beginning on an ever spinning reel\" )  p <- ggplot(spiral, aes(x, y)) +   coord_equal(xlim = c(-1000, 1000), ylim = c(-1000, 1000)) p + geom_path() + labs(subtitle = \"geom_path()\") p + geom_text(   data  = data.frame(x = 0, y = 0),   size  = 4, label = rhyme ) + labs(subtitle = \"geom_text()\") p + geom_textpath(   size  = 4, label = rhyme ) + labs(subtitle = \"geom_textpath()\")"},{"path":"https://allancameron.github.io/geomtextpath/articles/geomtextpath.html","id":"correction-of-angles-across-different-aspect-ratios","dir":"Articles","previous_headings":"Text on a path","what":"Correction of angles across different aspect ratios","title":"Introduction to geomtextpath","text":"mechanism underlying text positioning take account plotting window however rescaled. means text continues stick together follow path correct angle plotting window changes size aspect ratio. example, plot drawn different dimensions:","code":"p + geom_textpath(   size  = 4, label = rhyme ) + coord_cartesian() + labs(subtitle = \"geom_textpath()\") #> Coordinate system already present. Adding new coordinate system, which will replace the existing one. p + geom_textpath(   size  = 4, label = rhyme ) + coord_cartesian() + labs(subtitle = \"geom_textpath()\") #> Coordinate system already present. Adding new coordinate system, which will replace the existing one."},{"path":"https://allancameron.github.io/geomtextpath/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Allan Cameron. Author, maintainer. Teun van den Brand. Author.","code":""},{"path":"https://allancameron.github.io/geomtextpath/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Cameron , van den Brand T (2022). geomtextpath: Use Curved Text Ggplot2. R package version 0.1.0, https://allancameron.github.io/geomtextpath/.","code":"@Manual{,   title = {geomtextpath: Use Curved Text in Ggplot2},   author = {Allan Cameron and Teun {van den Brand}},   year = {2022},   note = {R package version 0.1.0},   url = {https://allancameron.github.io/geomtextpath/}, }"},{"path":[]},{"path":"https://allancameron.github.io/geomtextpath/index.html","id":"create-curved-text-in-ggplot2","dir":"","previous_headings":"","what":"Create curved text in ggplot2","title":"Use Curved Text in Ggplot2","text":"existing text-based geom layers ggplot2 (geom_text geom_label) ideal majority plots, since typically textual annotations short, straight line axes. However, occasions useful text follow curved path. may create recreate specific visual effect, may label circular / polar plot “natural” way. Direct automatic text labels adhere associated line can also provide neat alternative legends, without need specifying exact label positions, lower risk overplotting. Using geomtextpath, text can follow path, remain correctly spaced angled, even change size aspect ratio plotting device. without need redraw plot time, shown introduction vignette.","code":""},{"path":"https://allancameron.github.io/geomtextpath/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Use Curved Text in Ggplot2","text":"can install development version geomtextpath GitHub :","code":"# install.packages(\"remotes\") remotes::install_github(\"AllanCameron/geomtextpath\")"},{"path":"https://allancameron.github.io/geomtextpath/index.html","id":"using-geomtextpath","dir":"","previous_headings":"","what":"Using geomtextpath","title":"Use Curved Text in Ggplot2","text":"installed, simply call: core functions package, geom_textpath geom_labelpath, work like geom ggplot2. take co-ordinates, y co-ordinates text label aesthetic mapping. basic, allows label plotted arbitrary path, shown following example:  want text box, even text curved, can use geom_labelpath instead:  course, point package produce graphical novelties, provide easy visually appealing way present data. Just geom_path foundation several geoms ggplot2, geom_textpath geom_labelpath foundation geoms package. line-based geoms ggplot two equivalents package: aims replicate functionality equivalent ggplot2 function, direct text labels follow shape lines drawn. special case geom_sf, draws different shapes based geometry objects drawn, equivalent geom_textsf geom_labelsf, identify label linestring components (typically rivers roads), without attempting label polygons.","code":"library(geomtextpath) #> Loading required package: ggplot2 # Set a consistent theme for the plots here theme_set(theme_minimal() +            theme(axis.line = element_line(size = 0.25, colour = \"gray75\")))  t <- seq(5, -1, length.out = 1000) * pi  spiral <- data.frame(x    = sin(t) * 1:1000,                       y    = cos(t) * 1:1000,                      text = paste(\"Like a circle in a spiral,\",                                   \"like a wheel within a wheel,\",                                   \"never ending or beginning,\",                                   \"on an ever spinning reel\")                      )  ggplot(spiral, aes(x, y, label = text)) +   geom_textpath(size = 7, vjust = 2, text_only = TRUE) +   coord_equal(xlim = c(-1500, 1500), ylim = c(-1500, 1500)) set.seed(5)  df <- data.frame(x = spline(1:5, runif(5), xout = seq(1, 5, 1/100))$y,                  y = spline(1:5, runif(5), xout = seq(1, 5, 1/100))$y,                  z = \"A curved textbox on an arbitrary path\")  ggplot(df, aes(x, y, label = z)) + geom_labelpath(size = 5, fill = \"#F6F6FF\")"},{"path":"https://allancameron.github.io/geomtextpath/index.html","id":"geom_textline-and-geom_labelline","dir":"","previous_headings":"Using geomtextpath","what":"geom_textline and geom_labelline","title":"Use Curved Text in Ggplot2","text":"can use geom_textline geom_labelline drop geom_line want directly labelled. Just pass label want argument geom_textline (grouped data can pass label aesthetic mapping). geoms , can specify line’s appearance text’s appearance separately.","code":"ggplot(pressure, aes(temperature, pressure)) +   geom_textline(label = \"Mercury vapor pressure\", size = 8, vjust = -0.5,                 linewidth = 1, linecolor = \"red4\", linetype = 2,                  color = \"deepskyblue4\")"},{"path":"https://allancameron.github.io/geomtextpath/index.html","id":"geom_textdensity-and-geom_labeldensity","dir":"","previous_headings":"Using geomtextpath","what":"geom_textdensity and geom_labeldensity","title":"Use Curved Text in Ggplot2","text":"analogues geom_density allows smoothly curved labels density plots  Note able “reclaim” space normally taken legend without leaving ambiguity plot.","code":"ggplot(iris, aes(x = Sepal.Length, colour = Species, label = Species)) +   geom_textdensity(size = 6, fontface = 2, hjust = 0.2, vjust = 0.3) +   theme(legend.position = \"none\")"},{"path":"https://allancameron.github.io/geomtextpath/index.html","id":"geom_textsmooth-and-geom_labelsmooth","dir":"","previous_headings":"Using geomtextpath","what":"geom_textsmooth and geom_labelsmooth","title":"Use Curved Text in Ggplot2","text":"can use geoms get labelled trend lines scatterplots:","code":"ggplot(iris, aes(x = Sepal.Length, y = Petal.Length)) +   geom_point(alpha = 0.1) +   geom_textsmooth(aes(label = Species, colour = Species),                 method = \"loess\", formula = y ~ x,                 size = 7, linetype = 3, fontface = 2, linewidth = 1) +   scale_colour_manual(values = c(\"forestgreen\", \"deepskyblue4\", \"tomato4\")) +   theme(legend.position = \"none\")"},{"path":"https://allancameron.github.io/geomtextpath/index.html","id":"labelled-contour-lines","dir":"","previous_headings":"Using geomtextpath","what":"Labelled contour lines","title":"Use Curved Text in Ggplot2","text":"Adding labels level contour lines now simple calling geom_textcontour geom_labelcontour instead geom_contour:  also geom_textdensity2d geom_labeldensity2d common use case 2D density contours:","code":"df <- expand.grid(x = seq(nrow(volcano)), y = seq(ncol(volcano))) df$z <- as.vector(volcano)  ggplot(df, aes(x, y, z = z)) +    geom_contour_filled(bins = 6, alpha = 0.6) +    geom_textcontour(bins = 6, size = 2.5, padding = unit(0.05, \"in\")) +    scale_fill_manual(values = terrain.colors(11)) +    theme(legend.position = \"none\") set.seed(1)  df  <- data.frame(x = rnorm(100), y = rnorm(100))  ggplot(df, aes(x, y)) +    geom_textdensity2d()"},{"path":"https://allancameron.github.io/geomtextpath/index.html","id":"geom_textsf-and-geom_labelsf","dir":"","previous_headings":"Using geomtextpath","what":"geom_textsf and geom_labelsf","title":"Use Curved Text in Ggplot2","text":"geoms behave much way geom_sf, except linestrings rivers roads can given (curved) text labels:","code":"df <- data.frame(x = c(-4.2518, -3.1883),                   y = c(55.8642, 55.9533),                  label = c(\"Glasgow\", \"Edinburgh\"))  ggplot(data = df) +   geom_textsf(data = waterways,               aes(label = name), text_smoothing = 99.5, linecolour = \"#8888B3\",                color = \"gray30\", hjust = 0.25, vjust = -0.5, fill = \"#E6F0B3\",                alpha = 0.8, fontface = 3, size = 3) +    geom_point(aes(x, y), data = df, color = \"gray50\", size = 3) +    geom_textpath(aes(x, y, label = label), color = \"gray50\",                 hjust = c(-0.2, 1.2)) +   theme(panel.grid = element_line()) +    lims(x = c(-4.7, -3), y = c(55.62, 56.25))"},{"path":"https://allancameron.github.io/geomtextpath/index.html","id":"reference-lines","dir":"","previous_headings":"Using geomtextpath","what":"Reference lines","title":"Use Curved Text in Ggplot2","text":"Often, reference line added plot requires text annotation. can directly geom_textabline, geom_textvline geom_texthline, text-box equivalents geom_labelabline, geom_labelvline geom_labelhline. Although lines aren’t curved, benefits using geomtextpath functions labelled reference line required: single call needed, co-ordinates required text label, text can put -line appropriate break line automatically, label orientate curve appropriately polar co-ordinates. example shows three text-based reference line geoms:","code":"ggplot(mtcars, aes(mpg, disp)) +    geom_point() +    geom_texthline(yintercept = 200, label = \"displacement threshold\",                   hjust = 0.8, color = \"red4\") +   geom_textvline(xintercept = 20, label = \"consumption threshold\", hjust = 0.8,                  linetype = 2, vjust = 1.3, color = \"blue4\") +   geom_textabline(slope = 15, intercept = -100, label = \"partition line\",                    color = \"green4\", hjust = 0.6, vjust = -0.2)"},{"path":"https://allancameron.github.io/geomtextpath/index.html","id":"arbitrary-stat-transformations","dir":"","previous_headings":"Using geomtextpath","what":"Arbitrary stat transformations","title":"Use Curved Text in Ggplot2","text":"“stat” transformations can used directly geom_textpath geom_labelpath. example, functions can labelled paths created stat_function:","code":"ggplot() +    xlim(c(0, 1)) +    stat_function(geom = \"textpath\",                 fun = dgamma, color = \"red4\",                 label = \"gamma distribution with shape = 1\",                 size = 5, vjust = -0.2, hjust = 0.1, args = list(shape = 1)) +   stat_function(geom = \"textpath\",                 fun = dgamma, color = \"blue4\",                 label = \"gamma distribution with shape = 2\",                 size = 5, vjust = -0.2, hjust = 0.1, args = list(shape = 2)) +   stat_function(geom = \"textpath\",                 fun = dgamma, color = \"green4\",                 label = \"gamma distribution with shape = 3\",                 size = 5, vjust = -0.2, hjust = 0.1, args = list(shape = 3))"},{"path":"https://allancameron.github.io/geomtextpath/index.html","id":"controlling-text-position","dir":"","previous_headings":"Using geomtextpath","what":"Controlling text position","title":"Use Curved Text in Ggplot2","text":"Just like geom_text, vjust parameter controls vertical justification text, though geom_textpath related geoms, text justified relative path rather single point. vjust parameter moves text line, line automatically “filled ”. short text labels applied long paths, need parameter control far along path text placed. use horizontal justification (hjust) parameter. can numeric (0 1), can accept position descriptions “xmid”, “ymax”, “auto”. example text justified line path using small negative value vjust, hjust set “ymax” place labels peak curve:  can read text positioning aesthetics vignette.","code":"p <- ggplot(iris, aes(x = Sepal.Length, colour = Species, label = Species)) +        theme(legend.position = \"none\")  p +    geom_textdensity(size = 6, fontface = 2, spacing = 50,                    vjust = -0.2, hjust = \"ymax\") +   ylim(c(0, 1.3))"},{"path":"https://allancameron.github.io/geomtextpath/index.html","id":"smoothing-text-while-preserving-path-details","dir":"","previous_headings":"Using geomtextpath","what":"Smoothing text while preserving path details","title":"Use Curved Text in Ggplot2","text":"lines may “noisy” angular direct labels remain legible adhere closely line. therefore added ability smooth text label keeping path unaltered, using text_smoothing parameter, can set 0 (none) 100 (maximum).","code":"ggplot(economics, aes(date, unemploy)) +   geom_textline(linecolour = \"grey\", size = 4, vjust = -2, hjust = 0.47,                 label = \"1990s Decline\", text_smoothing = 97)"},{"path":"https://allancameron.github.io/geomtextpath/index.html","id":"plotmath-support","dir":"","previous_headings":"Using geomtextpath","what":"Plotmath support","title":"Use Curved Text in Ggplot2","text":"want use plotmath expressions can much geom_text. Just tell geom_textpath labels parsed using parse = TRUE  Note , due way grid package draws plotmath expressions, plotmath labels straight rather curved. However, example , still angled according gradient curve.","code":"lab <- expression(paste(\"y = \", frac(1, sigma*sqrt(2*pi)), \" \",                             plain(e)^{frac(-(x-mu)^2, 2*sigma^2)}))  df <- data.frame(x = seq(-2, 0, len = 100),                  y = dnorm(seq(-2, 0, len = 100)),                  z = as.character(lab))  ggplot(df, aes(x, y)) +    geom_textpath(aes(label = z), vjust = -0.2, hjust = 0.1, size = 8, parse = TRUE)"},{"path":"https://allancameron.github.io/geomtextpath/index.html","id":"rich-text-support","dir":"","previous_headings":"Using geomtextpath","what":"Rich text support","title":"Use Curved Text in Ggplot2","text":"geoms also feature richtext support. want text labels interpreted rich text, simply pass rich = TRUE parameter call geom layer","code":"lab <- paste(\"<span style='color:gray30;font-size:10pt'>Plasma <\/span>\",              \"<strong style='color:red4;font-size:10pt'>Indometacin<\/strong>\",              \"<span style ='color:gray30;font-size:10pt'>Concentration <\/span>\",              \"<i style='color:gray50;font-size:8pt'><sub>(\\u03BCg/l)<\/sub><\/i>\")  ggplot(Indometh, aes(time, conc, group = 1)) +    geom_textsmooth(formula = y ~ x, method = loess,                    label = lab, rich = TRUE, vjust = -0.5, size = 4.5,                    text_smoothing = 98, linecolor = \"red4\") +    xlim(c(0, 4)) #> Warning: Removed 18 rows containing non-finite values (stat_smooth)."},{"path":"https://allancameron.github.io/geomtextpath/index.html","id":"text-paths-in-polar-coordinates","dir":"","previous_headings":"Using geomtextpath","what":"Text paths in polar coordinates","title":"Use Curved Text in Ggplot2","text":"Straight text paths Cartesian coordinates become curved polar coordinates.   included ability point-like text paths. sounds paradoxical, means geom_textpath can used drop-geom_text, behave much way, exception text automatically curve polar co-ordinates. best way show head--head comparison. Note p_text p_textpath made base plot data. normal Cartesian Co-ordinates essentially identical:   note difference switch polar co-ordinates:   default, labels upside (even mostly upside ) automatically flipped facing legible direction. can turned using upright = FALSE call geom_textpath. can even construct complex diagrammatic plots:  flip nicely polar co-ordinates.","code":"df <- data.frame(x = c(1, 1000), y = 1, text = \"This is a perfectly flat label\")  p <- ggplot(df, aes(x, y, label = text)) +   geom_labelpath(size = 6, text_only = TRUE, fill = \"#F6F6FF\") +   ylim(c(0.9, 1.1))  p p + coord_polar() df <- data.frame(x = 1:4, y = c(4, 7, 6, 3),                  color = c(\"royalblue\", \"orangered\", \"deepskyblue4\", \"violet\"))  p <- ggplot(df, aes(x, y, color = color, label = color)) +        geom_point(size = 1.5) +        scale_color_identity() +        lims(x = c(0, 6), y = c(0, 8))  p_text     <- p + geom_text(size = 8, hjust = -0.1) p_textpath <- p + geom_textpath(size = 8, hjust = -0.1) p_text p_textpath p_text <- p_text + coord_polar() p_textpath <- p_textpath + coord_polar()  p_text p_textpath p <- data.frame(x1 = c(seq(0, 10/6 * pi, pi/3),                   seq(0, 10/6 * pi, 2*pi/3)),            y1 = c(rep(2, 6), rep(-1, 3)),            x2 = c(seq(0, 10/6 * pi, pi/3)  + pi/3,                   seq(0, 10/6 * pi, 2*pi/3) + 2*pi/3),            y2 = c(rep(4, 6), rep(2, 3)),            group = letters[c(1:6, (1:3) * 2)],            alpha = c(rep(1, 6), rep(0.4, 3))) |>   ggplot(aes(x1, y1)) +   geom_rect(aes(xmin = x1, xmax = x2, ymin = y1, ymax = y2, fill = group,                 alpha = alpha),             color = \"white\", size = 2) +   geom_textpath(data = data.frame(x1 = seq(0, 2 * pi, length = 300),            y1 = rep(0.5, 300),            label = rep(c(\"stats\", \"effects\", \"polar\"), each = 100)),            aes(label = label), linetype = 0, size = 8,            upright = TRUE) +   geom_textpath(data = data.frame(x1 = seq(0, 2 * pi, length = 300),            y1 = rep(3, 300),            label = rep(c(\"density\", \"smooth\", \"unique\", \"organic\",                          \"easy to use\", \"automatic\"),                         each = 50)),            aes(label = label), linetype = 0, size = 4.6, color = \"white\",            upright = TRUE) +   scale_y_continuous(limits = c(-5, 4)) +   scale_x_continuous(limits = c(0, 2*pi)) +   scale_fill_manual(values = c(\"deepskyblue3\", \"deepskyblue4\",                                \"green3\", \"green4\",\"tomato\", \"tomato2\")) +   scale_alpha_identity() +   theme_void() +   theme(legend.position = \"none\")   p p + coord_polar()"},{"path":"https://allancameron.github.io/geomtextpath/index.html","id":"coord_curvedpolar","dir":"","previous_headings":"","what":"coord_curvedpolar","title":"Use Curved Text in Ggplot2","text":"Another function exported package coord_curvedpolar. behaves identically coord_polar, except circumferential axis labels curved. example:   can useful achieve particular aesthetic effect (), can also practical utility axis labels long, can produce problems standard coord_polar:   can see examples gallery vignette.","code":"clock <- function(x) {      hours <- c(rep(x[1] %% 12 + tail(x, 1) / 60, 2), 0, 3.5)   minutes <- c(rep(tail(x, 1)/5, 2), 0, 5)    ggplot(as.data.frame(rbind(hours, minutes)), aes(V1, V3)) +        geom_segment(aes(xend = V2, yend = V4),                     size = c(3, 2), lineend = \"round\") +       geom_point(x = 0, y = 0, size = 6) +       scale_x_continuous(limits = c(0, 12), breaks = 1:12,                          label = as.roman) +       scale_y_continuous(limits = c(0, 6), expand = c(0, 0)) +       theme_void() +        theme(axis.text.x = element_text(size = 25, face = 2),             plot.margin = margin(20, 20, 20, 20)) }  clock(03:35) + coord_polar() clock(19:15) + coord_curvedpolar() df <- data.frame(x = c(\"A long axis label\", \"Another long label\",                        \"The longest label of all\", \"Yet another label\"),                  y = c(8, 6, 10, 4))  p <- ggplot(df, aes(x, y, fill = x)) +        geom_col(width = 0.5) +       scale_fill_brewer(type = \"qual\") +       theme(axis.text.x = element_text(size = 15),             legend.position = \"none\")  p + coord_polar() p + coord_curvedpolar()"},{"path":"https://allancameron.github.io/geomtextpath/index.html","id":"limitations","dir":"","previous_headings":"","what":"Limitations","title":"Use Curved Text in Ggplot2","text":"limitations inherent plotting text elements ggplot due way underlying grid graphics handles text. text string dealt zero-width object, therefore rotation spacing letters making string can dealt treating letter separately. important realise letters rotated, undergo change shape. Thus, example, large text appearing convex curves deformed individual letters narrower bottom wider top. require reinterpreting letters polygons, likely cause problems solve. paths may points tight curvature, setting offset / vjust text larger distance focus point curve produce odd effects. package tries detect warn user happens, suggest remedies.","code":""},{"path":"https://allancameron.github.io/geomtextpath/reference/GeomTextpath.html","id":null,"dir":"Reference","previous_headings":"","what":"The Geom object for a textpath — GeomTextpath","title":"The Geom object for a textpath — GeomTextpath","text":"ggproto class creates textpath layer. intended used directly end user.","code":""},{"path":"https://allancameron.github.io/geomtextpath/reference/coord_curvedpolar.html","id":null,"dir":"Reference","previous_headings":"","what":"Polar coordinates with curved text on x axis — coord_curvedpolar","title":"Polar coordinates with curved text on x axis — coord_curvedpolar","text":"Polar co-ordinates `ggplot2` help create range circular plots, can used present data visually appealing, user-friendly way. However, standard `coord_polar` uses `textGrob` render labels circumferential (theta) axis, meaning labels rotate curve line axis. `coord_curvedpolar` aims identical `coord_polar`, except text theta axis follows curve plot, correcting automatically resizing preserve letter spacing size.","code":""},{"path":"https://allancameron.github.io/geomtextpath/reference/coord_curvedpolar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Polar coordinates with curved text on x axis — coord_curvedpolar","text":"","code":"coord_curvedpolar(   theta = \"x\",   start = 0,   direction = 1,   clip = \"on\",   halign = c(\"center\") )"},{"path":"https://allancameron.github.io/geomtextpath/reference/coord_curvedpolar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Polar coordinates with curved text on x axis — coord_curvedpolar","text":"theta variable map angle (`x` `y`) start Offset starting point 12 o'clock radians. Offset applied clockwise anticlockwise depending value `direction`. direction 1, clockwise; -1, anticlockwise clip drawing clipped extent plot panel? setting `\"\"` (default) means yes, setting `\"\"` means . details, please see [`coord_cartesian()`]. halign character(1) describing multi-line text justified. Can either \"center\" (default), \"left\" \"right\".","code":""},{"path":"https://allancameron.github.io/geomtextpath/reference/coord_curvedpolar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Polar coordinates with curved text on x axis — coord_curvedpolar","text":"","code":"# A pie chart = stacked bar chart + polar coordinates pie <- ggplot(mtcars, aes(x = factor(1), fill = factor(cyl))) +  geom_bar(width = 1)  pie + coord_curvedpolar(theta = \"y\")   # Demonstrating curved category labels p <- ggplot(data.frame(x = paste(\"Category label\", 1:5), y = runif(5)),             aes(x, y, fill = x)) +        geom_col() +        theme_bw() +        theme(panel.border = element_blank(),              legend.position = \"none\",              axis.text.x = element_text(size = 10, vjust = 0.5))  # Standard bar chart in Cartesian Co-ordinates p   # Standard coord_polar axis labels p + coord_polar()   # Curved polar co-ordinate labels p + coord_curvedpolar()"},{"path":"https://allancameron.github.io/geomtextpath/reference/geom_textabline.html","id":null,"dir":"Reference","previous_headings":"","what":"Labelled reference lines: horizontal, vertical, and diagonal — geom_textabline","title":"Labelled reference lines: horizontal, vertical, and diagonal — geom_textabline","text":"geoms add labelled reference lines plot, either horizontal, vertical, diagonal (specified slope intercept). useful annotating plots. labelled equivalent geom_vline, geom_hline geom_abline ggplot2.","code":""},{"path":"https://allancameron.github.io/geomtextpath/reference/geom_textabline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Labelled reference lines: horizontal, vertical, and diagonal — geom_textabline","text":"","code":"geom_textabline(   mapping = NULL,   data = NULL,   slope,   intercept,   stat = \"identity\",   position = \"identity\",   ...,   arrow = NULL,   lineend = \"butt\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )  geom_labelabline(   mapping = NULL,   data = NULL,   slope,   intercept,   stat = \"identity\",   position = \"identity\",   ...,   arrow = NULL,   lineend = \"butt\",   straight = NULL,   label.r = unit(0.15, \"lines\"),   label.padding = unit(0.25, \"lines\"),   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )  geom_texthline(   mapping = NULL,   data = NULL,   yintercept,   stat = \"identity\",   position = \"identity\",   ...,   arrow = NULL,   lineend = \"butt\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )  geom_labelhline(   mapping = NULL,   data = NULL,   yintercept,   stat = \"identity\",   position = \"identity\",   ...,   arrow = NULL,   lineend = \"butt\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   straight = NULL,   label.r = unit(0.15, \"lines\"),   label.padding = unit(0.25, \"lines\") )  geom_textvline(   mapping = NULL,   data = NULL,   xintercept,   stat = \"identity\",   position = \"identity\",   ...,   arrow = NULL,   lineend = \"butt\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )  geom_labelvline(   mapping = NULL,   data = NULL,   xintercept,   stat = \"identity\",   position = \"identity\",   ...,   arrow = NULL,   lineend = \"butt\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   straight = NULL,   label.r = unit(0.15, \"lines\"),   label.padding = unit(0.25, \"lines\") )"},{"path":"https://allancameron.github.io/geomtextpath/reference/geom_textabline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Labelled reference lines: horizontal, vertical, and diagonal — geom_textabline","text":"mapping Set aesthetic mappings created aes() aes_(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). slope slope abline intercept point y axis abline crosses . stat statistical transformation use data layer, string. position Position adjustment, either string, result call position adjustment function. ... arguments passed layer. often aesthetics, used set aesthetic fixed value, like colour = \"red\" size = 3. can also following text-path parameters: gap logical(1) TRUE, breaks path two sections gap either side label. FALSE, path plotted whole. Alternatively, NA, path broken string vjust 0 1, otherwise. default label variant FALSE text variant NA. upright logical(1) TRUE (default), inverts text majority letters upside along path, improve legibility. FALSE, path decides orientation text. halign character(1) describing multi-line text justified. Can either \"center\" (default), \"left\" \"right\". offset unit object length 1 determine offset text path. NULL (default), vjust parameter decides offset. NULL, offset argument overrules vjust setting. parse logical(1) TRUE, coerce labels expressions, allowing plotmath syntax used. straight logical(1) TRUE, keeps letters label straight baseline FALSE (default), lets individual letters follow curve. might helpful noisy paths. padding unit object length 1 determine padding text path gap parameter trims path. text_smoothing numeric(1) value 0 100 smooths text without affecting line portion geom. default value 0 means smoothing applied. rich logical(1) whether interpret text html/markdown formatted rich text. Default: FALSE. See also rich text section details geom_textpath(). remove_long TRUE, labels longer associated path removed. arrow Arrow specification, created grid::arrow(). lineend Line end style (round, butt, square). na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). straight logical(1) TRUE, keeps letters label straight baseline FALSE (default), lets individual letters follow curve. might helpful noisy paths. label.r Radius rounded corners. Defaults 0.15 lines. label.padding Amount padding around label. Defaults 0.25 lines. yintercept value line intercept y axis xintercept value line intercept y axis","code":""},{"path":"https://allancameron.github.io/geomtextpath/reference/geom_textabline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Labelled reference lines: horizontal, vertical, and diagonal — geom_textabline","text":"Layer ggproto object can added plot. Layer ggproto object can added plot. Layer ggproto object can added plot.","code":""},{"path":"https://allancameron.github.io/geomtextpath/reference/geom_textabline.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Labelled reference lines: horizontal, vertical, and diagonal — geom_textabline","text":"Although reference lines straight, therefore lend curved text, geom layers included package make labelling reference lines easier, allow automatic line breaking desired, translate nicely polar co-ordinates. geoms act slightly differently geoms. can supply parameters two ways: either arguments layer function, via aesthetics. use arguments, e.g. geom_textabline(label = \"label\", intercept = 0, slope = 1), behind scenes geom makes new data frame containing just data supplied. means lines facets; want vary across facets, construct data frame use aesthetics. Unlike geoms, geoms inherit aesthetics plot default, understand x y aesthetics commonly set plot. also affect x y scales.","code":""},{"path":"https://allancameron.github.io/geomtextpath/reference/geom_textabline.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Labelled reference lines: horizontal, vertical, and diagonal — geom_textabline","text":"geom_textabline() understands following aesthetics (required aesthetics bold): label slope intercept alpha angle colour family fontface group hjust linecolour lineheight linetype linewidth size spacing textcolour vjust `spacing` aesthetic allows fine control spacing text, called 'tracking' typography. default 0 units measured 1/1000 em. Numbers greater zero increase spacing, whereas negative numbers decrease spacing. Learn setting aesthetics  vignette(\"ggplot2-specs\"). geom_texthline() understands following aesthetics (required aesthetics bold): yintercept label alpha angle colour family fontface group hjust linecolour lineheight linetype linewidth size spacing textcolour vjust `spacing` aesthetic allows fine control spacing text, called 'tracking' typography. default 0 units measured 1/1000 em. Numbers greater zero increase spacing, whereas negative numbers decrease spacing. Learn setting aesthetics  vignette(\"ggplot2-specs\"). geom_textvline() understands following aesthetics (required aesthetics bold): xintercept label alpha angle colour family fontface group hjust linecolour lineheight linetype linewidth size spacing textcolour vjust `spacing` aesthetic allows fine control spacing text, called 'tracking' typography. default 0 units measured 1/1000 em. Numbers greater zero increase spacing, whereas negative numbers decrease spacing. Learn setting aesthetics  vignette(\"ggplot2-specs\").","code":""},{"path":"https://allancameron.github.io/geomtextpath/reference/geom_textabline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Labelled reference lines: horizontal, vertical, and diagonal — geom_textabline","text":"","code":"ggplot(mtcars, aes(mpg, disp)) + geom_point() + geom_texthline(yintercept = 200, label = \"displacement threshold\",                hjust = 0.8, color = \"red4\") + geom_textvline(xintercept = 20, label = \"consumption threshold\", hjust = 0.8,                linetype = 2, vjust = 1.3, color = \"blue4\") + geom_textabline(slope = 15, intercept = -100, label = \"partition line\",                 color = \"green4\", hjust = 0.6, vjust = -0.2)"},{"path":"https://allancameron.github.io/geomtextpath/reference/geom_textcontour.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce labelled contour lines in  ggplot2 — geom_textcontour","title":"Produce labelled contour lines in  ggplot2 — geom_textcontour","text":"Contour lines available already ggplot2, native geom_contour allow lines labelled level contour. geom_textcontour adds ability.","code":""},{"path":"https://allancameron.github.io/geomtextpath/reference/geom_textcontour.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce labelled contour lines in  ggplot2 — geom_textcontour","text":"","code":"geom_textcontour(   mapping = NULL,   data = NULL,   stat = \"text_contour\",   position = \"identity\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   lineend = \"butt\",   linejoin = \"round\",   linemitre = 10,   bins = NULL,   binwidth = NULL,   breaks = NULL,   ... )  geom_labelcontour(   mapping = NULL,   data = NULL,   stat = \"text_contour\",   position = \"identity\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   ...,   lineend = \"butt\",   linejoin = \"round\",   linemitre = 10,   bins = NULL,   binwidth = NULL,   breaks = NULL,   label.padding = unit(0.25, \"lines\"),   label.r = unit(0.15, \"lines\"),   arrow = NULL )  stat_textcontour(   mapping = NULL,   data = NULL,   geom = \"text_contour\",   position = \"identity\",   ...,   bins = NULL,   binwidth = NULL,   breaks = NULL,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://allancameron.github.io/geomtextpath/reference/geom_textcontour.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce labelled contour lines in  ggplot2 — geom_textcontour","text":"mapping Set aesthetic mappings created aes() aes_(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer, string. position Position adjustment, either string, result call position adjustment function. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). lineend Line end style (round, butt, square). linejoin Line join style (round, mitre, bevel). linemitre Line mitre limit (number greater 1). bins Number contour bins. Overridden binwidth. binwidth width contour bins. Overridden breaks. breaks Numeric vector set contour breaks. Overrides binwidth bins. default, vector length ten pretty() breaks. ... arguments passed layer. often aesthetics, used set aesthetic fixed value, like colour = \"red\" size = 3. can also following text-path parameters: gap logical(1) TRUE, breaks path two sections gap either side label. FALSE, path plotted whole. Alternatively, NA, path broken string vjust 0 1, otherwise. default label variant FALSE text variant NA. upright logical(1) TRUE (default), inverts text majority letters upside along path, improve legibility. FALSE, path decides orientation text. halign character(1) describing multi-line text justified. Can either \"center\" (default), \"left\" \"right\". offset unit object length 1 determine offset text path. NULL (default), vjust parameter decides offset. NULL, offset argument overrules vjust setting. parse logical(1) TRUE, coerce labels expressions, allowing plotmath syntax used. straight logical(1) TRUE, keeps letters label straight baseline FALSE (default), lets individual letters follow curve. might helpful noisy paths. padding unit object length 1 determine padding text path gap parameter trims path. text_smoothing numeric(1) value 0 100 smooths text without affecting line portion geom. default value 0 means smoothing applied. rich logical(1) whether interpret text html/markdown formatted rich text. Default: FALSE. See also rich text section details geom_textpath(). remove_long TRUE, labels longer associated path removed. label.padding Amount padding around label. Defaults 0.25 lines. label.r Radius rounded corners. Defaults 0.15 lines. arrow Arrow specification, created grid::arrow(). geom geometric object use display data","code":""},{"path":"https://allancameron.github.io/geomtextpath/reference/geom_textcontour.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Produce labelled contour lines in  ggplot2 — geom_textcontour","text":"geom_text_contour() understands following aesthetics (required aesthetics bold): x y alpha angle colour family fontface group hjust linecolour lineheight linetype linewidth size spacing textcolour vjust `spacing` aesthetic allows fine control spacing text, called 'tracking' typography. default 0 units measured 1/1000 em. Numbers greater zero increase spacing, whereas negative numbers decrease spacing. Learn setting aesthetics  vignette(\"ggplot2-specs\").","code":""},{"path":"https://allancameron.github.io/geomtextpath/reference/geom_textcontour.html","id":"computed-variables","dir":"Reference","previous_headings":"","what":"Computed variables","title":"Produce labelled contour lines in  ggplot2 — geom_textcontour","text":"variable `level` numeric factor   depending whether lines bands calculated. `level` Height contour. numeric vector    represents bin boundaries.","code":""},{"path":"https://allancameron.github.io/geomtextpath/reference/geom_textcontour.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Produce labelled contour lines in  ggplot2 — geom_textcontour","text":"","code":"df <- expand.grid(x = seq(nrow(volcano)), y = seq(ncol(volcano))) df$z <- as.vector(volcano)  ggplot(df, aes(x, y, z = z)) +   geom_contour_filled(bins = 6, alpha = 0.6) +   geom_textcontour(bins = 6, size = 2.5, padding = unit(0.05, \"in\")) +   scale_fill_manual(values = terrain.colors(11)) +   theme_classic() +   theme(legend.position = \"none\")"},{"path":"https://allancameron.github.io/geomtextpath/reference/geom_textdensity.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce smoothly labelled density plots in ggplot2 — geom_textdensity","title":"Produce smoothly labelled density plots in ggplot2 — geom_textdensity","text":"Line plots smoothed kernel density estimates available ggplot2 via geom_density. geom layer simply adds text label curve follow contour density line used drop-replacement geom_density","code":""},{"path":"https://allancameron.github.io/geomtextpath/reference/geom_textdensity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce smoothly labelled density plots in ggplot2 — geom_textdensity","text":"","code":"geom_textdensity(   mapping = NULL,   data = NULL,   stat = \"density\",   position = \"identity\",   ...,   bw = \"nrd0\",   adjust = 1,   kernel = \"gaussian\",   n = 512,   lineend = \"butt\",   linejoin = \"round\",   linemitre = 10,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )  geom_labeldensity(   mapping = NULL,   data = NULL,   stat = \"density\",   position = \"identity\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   ...,   lineend = \"butt\",   linejoin = \"round\",   linemitre = 10,   bw = \"nrd0\",   adjust = 1,   kernel = \"gaussian\",   n = 512,   label.padding = unit(0.25, \"lines\"),   label.r = unit(0.15, \"lines\"),   arrow = NULL )"},{"path":"https://allancameron.github.io/geomtextpath/reference/geom_textdensity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce smoothly labelled density plots in ggplot2 — geom_textdensity","text":"mapping Set aesthetic mappings created aes() aes_(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer, string. position Position adjustment, either string, result call position adjustment function. ... arguments passed layer. often aesthetics, used set aesthetic fixed value, like colour = \"red\" size = 3. can also following text-path parameters: gap logical(1) TRUE, breaks path two sections gap either side label. FALSE, path plotted whole. Alternatively, NA, path broken string vjust 0 1, otherwise. default label variant FALSE text variant NA. upright logical(1) TRUE (default), inverts text majority letters upside along path, improve legibility. FALSE, path decides orientation text. halign character(1) describing multi-line text justified. Can either \"center\" (default), \"left\" \"right\". offset unit object length 1 determine offset text path. NULL (default), vjust parameter decides offset. NULL, offset argument overrules vjust setting. parse logical(1) TRUE, coerce labels expressions, allowing plotmath syntax used. straight logical(1) TRUE, keeps letters label straight baseline FALSE (default), lets individual letters follow curve. might helpful noisy paths. padding unit object length 1 determine padding text path gap parameter trims path. text_smoothing numeric(1) value 0 100 smooths text without affecting line portion geom. default value 0 means smoothing applied. rich logical(1) whether interpret text html/markdown formatted rich text. Default: FALSE. See also rich text section details geom_textpath(). remove_long TRUE, labels longer associated path removed. bw smoothing bandwidth used. numeric, standard deviation smoothing kernel. character, rule choose bandwidth, listed stats::bw.nrd(). adjust multiplicate bandwidth adjustment. makes possible adjust bandwidth still using bandwidth estimator. example, adjust = 1/2 means use half default bandwidth. kernel Kernel. See list available kernels density(). n number equally spaced points density estimated, power two, see density() details lineend Line end style (round, butt, square). linejoin Line join style (round, mitre, bevel). linemitre Line mitre limit (number greater 1). na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). label.padding Amount padding around label. Defaults 0.25 lines. label.r Radius rounded corners. Defaults 0.15 lines. arrow Arrow specification, created grid::arrow().","code":""},{"path":"https://allancameron.github.io/geomtextpath/reference/geom_textdensity.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Produce smoothly labelled density plots in ggplot2 — geom_textdensity","text":"geom_text_density() understands following aesthetics (required aesthetics bold): x label alpha angle colour family fontface group hjust linecolour lineheight linetype linewidth size spacing textcolour vjust `spacing` aesthetic allows fine control spacing text, called 'tracking' typography. default 0 units measured 1/1000 em. Numbers greater zero increase spacing, whereas negative numbers decrease spacing. Learn setting aesthetics  vignette(\"ggplot2-specs\").","code":""},{"path":"https://allancameron.github.io/geomtextpath/reference/geom_textdensity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Produce smoothly labelled density plots in ggplot2 — geom_textdensity","text":"","code":"ggplot(iris, aes(Sepal.Length, label = Species, color = Species)) +   geom_textdensity()"},{"path":"https://allancameron.github.io/geomtextpath/reference/geom_textdensity2d.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce labelled contour lines of 2D density in  ggplot2 — geom_textdensity2d","title":"Produce labelled contour lines of 2D density in  ggplot2 — geom_textdensity2d","text":"Contour lines representing 2D density available already ggplot2, native geom_density_2d allow lines labelled level contour. geom_textdensity2d adds ability.","code":""},{"path":"https://allancameron.github.io/geomtextpath/reference/geom_textdensity2d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce labelled contour lines of 2D density in  ggplot2 — geom_textdensity2d","text":"","code":"geom_textdensity2d(   mapping = NULL,   data = NULL,   stat = \"density_2d\",   position = \"identity\",   ...,   contour_var = \"density\",   n = 100,   h = NULL,   adjust = c(1, 1),   lineend = \"butt\",   linejoin = \"round\",   linemitre = 10,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )  geom_labeldensity2d(   mapping = NULL,   data = NULL,   stat = \"density_2d\",   position = \"identity\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   ...,   contour_var = \"density\",   n = 100,   h = NULL,   adjust = c(1, 1),   lineend = \"butt\",   linejoin = \"round\",   linemitre = 10,   label.padding = unit(0.25, \"lines\"),   label.r = unit(0.15, \"lines\"),   arrow = NULL )"},{"path":"https://allancameron.github.io/geomtextpath/reference/geom_textdensity2d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce labelled contour lines of 2D density in  ggplot2 — geom_textdensity2d","text":"mapping Set aesthetic mappings created aes() aes_(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer, string. position Position adjustment, either string, result call position adjustment function. ... arguments passed layer. often aesthetics, used set aesthetic fixed value, like colour = \"red\" size = 3. can also following text-path parameters: gap logical(1) TRUE, breaks path two sections gap either side label. FALSE, path plotted whole. Alternatively, NA, path broken string vjust 0 1, otherwise. default label variant FALSE text variant NA. upright logical(1) TRUE (default), inverts text majority letters upside along path, improve legibility. FALSE, path decides orientation text. halign character(1) describing multi-line text justified. Can either \"center\" (default), \"left\" \"right\". offset unit object length 1 determine offset text path. NULL (default), vjust parameter decides offset. NULL, offset argument overrules vjust setting. parse logical(1) TRUE, coerce labels expressions, allowing plotmath syntax used. straight logical(1) TRUE, keeps letters label straight baseline FALSE (default), lets individual letters follow curve. might helpful noisy paths. padding unit object length 1 determine padding text path gap parameter trims path. text_smoothing numeric(1) value 0 100 smooths text without affecting line portion geom. default value 0 means smoothing applied. rich logical(1) whether interpret text html/markdown formatted rich text. Default: FALSE. See also rich text section details geom_textpath(). remove_long TRUE, labels longer associated path removed. contour_var Character string identifying variable contour . Can one \"density\", \"ndensity\", \"count\". See section computed variables details. n Number grid points direction. h Bandwidth (vector length two). NULL, estimated using MASS::bandwidth.nrd(). adjust multiplicative bandwidth adjustment used 'h' 'NULL'. makes possible adjust bandwidth still using bandwidth estimator. example, adjust = 1/2 means use half default bandwidth. lineend Line end style (round, butt, square). linejoin Line join style (round, mitre, bevel). linemitre Line mitre limit (number greater 1). na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). label.padding Amount padding around label. Defaults 0.25 lines. label.r Radius rounded corners. Defaults 0.15 lines. arrow Arrow specification, created grid::arrow().","code":""},{"path":"https://allancameron.github.io/geomtextpath/reference/geom_textdensity2d.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Produce labelled contour lines of 2D density in  ggplot2 — geom_textdensity2d","text":"geom_text_density2d() understands following aesthetics (required aesthetics bold): x y alpha angle colour family fontface group hjust linecolour lineheight linetype linewidth size spacing textcolour vjust `spacing` aesthetic allows fine control spacing text, called 'tracking' typography. default 0 units measured 1/1000 em. Numbers greater zero increase spacing, whereas negative numbers decrease spacing. Learn setting aesthetics  vignette(\"ggplot2-specs\").","code":""},{"path":"https://allancameron.github.io/geomtextpath/reference/geom_textdensity2d.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Produce labelled contour lines of 2D density in  ggplot2 — geom_textdensity2d","text":"","code":"set.seed(1)  df  <- data.frame(x = rnorm(100), y = rnorm(100))  ggplot(df, aes(x, y)) +   geom_textdensity2d() +   theme_classic()"},{"path":"https://allancameron.github.io/geomtextpath/reference/geom_textpath.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Curved Text Along Paths in ggplot2 — geom_textpath","title":"Add Curved Text Along Paths in ggplot2 — geom_textpath","text":"existing text-based geom layers ggplot2 (geom_text() geom_label()) ideal majority plots, since typically textual annotations short, straight line axes plot. However, occasions useful text follow curved path. may create recreate specific visual effect, may label circular / polar plot \"natural\" way.","code":""},{"path":"https://allancameron.github.io/geomtextpath/reference/geom_textpath.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Curved Text Along Paths in ggplot2 — geom_textpath","text":"","code":"geom_textpath(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   ...,   lineend = \"butt\",   linejoin = \"round\",   linemitre = 10,   text_only = FALSE,   gap = NA,   upright = TRUE,   halign = \"center\",   offset = NULL,   parse = FALSE,   straight = FALSE,   padding = unit(0.05, \"inch\"),   text_smoothing = 0,   rich = FALSE,   arrow = NULL,   remove_long = FALSE )  geom_textline(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   na.rm = FALSE,   orientation = NA,   show.legend = NA,   inherit.aes = TRUE,   ...,   lineend = \"butt\",   linejoin = \"round\",   linemitre = 10,   arrow = NULL )  geom_labelpath(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   ...,   lineend = \"butt\",   linejoin = \"round\",   linemitre = 10,   text_only = FALSE,   gap = FALSE,   upright = TRUE,   halign = \"center\",   offset = NULL,   parse = FALSE,   straight = FALSE,   padding = unit(0.05, \"inch\"),   text_smoothing = 0,   rich = FALSE,   label.padding = unit(0.25, \"lines\"),   label.r = unit(0.15, \"lines\"),   arrow = NULL,   remove_long = FALSE )  geom_labelline(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   ...,   lineend = \"butt\",   linejoin = \"round\",   linemitre = 10,   text_only = FALSE,   gap = FALSE,   upright = TRUE,   halign = \"center\",   offset = NULL,   parse = FALSE,   straight = FALSE,   padding = unit(0.05, \"inch\"),   label.padding = unit(0.25, \"lines\"),   label.r = unit(0.15, \"lines\"),   arrow = NULL,   remove_long = TRUE )"},{"path":"https://allancameron.github.io/geomtextpath/reference/geom_textpath.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Curved Text Along Paths in ggplot2 — geom_textpath","text":"mapping Set aesthetic mappings created aes() aes_(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer, string. position Position adjustment, either string, result call position adjustment function. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). ... arguments passed layer(). often aesthetics, used set aesthetic fixed value, like colour = \"red\" size = 3. may also parameters paired geom/stat. lineend Line end style (round, butt, square). linejoin Line join style (round, mitre, bevel). linemitre Line mitre limit (number greater 1). text_only logical(1) indicating whether path part plotted along text (FALSE, default). TRUE, parameters aesthetics relating drawing path ignored. gap logical(1) TRUE, breaks path two sections gap either side label. FALSE, path plotted whole. Alternatively, NA, path broken string vjust 0 1, otherwise. default label variant FALSE text variant NA. upright logical(1) TRUE (default), inverts text majority letters upside along path, improve legibility. FALSE, path decides orientation text. halign character(1) describing multi-line text justified. Can either \"center\" (default), \"left\" \"right\". offset unit object length 1 determine offset text path. NULL (default), vjust parameter decides offset. NULL, offset argument overrules vjust setting. parse logical(1) TRUE, coerce labels expressions, allowing plotmath syntax used. straight logical(1) TRUE, keeps letters label straight baseline FALSE (default), lets individual letters follow curve. might helpful noisy paths. padding unit object length 1 determine padding text path gap parameter trims path. text_smoothing numeric(1) value 0 100 smooths text without affecting line portion geom. default value 0 means smoothing applied. rich logical(1) whether interpret text html/markdown formatted rich text. Default: FALSE. See also rich text section details geom_textpath(). arrow Arrow specification, created grid::arrow(). remove_long TRUE, labels longer associated path removed. orientation orientation layer. default (NA) automatically determines orientation aesthetic mapping. rare event fails can given explicitly setting orientation either \"x\" \"y\". See Orientation section detail. label.padding Amount padding around label. Defaults 0.25 lines. label.r Radius rounded corners. Defaults 0.15 lines.","code":""},{"path":[]},{"path":"https://allancameron.github.io/geomtextpath/reference/geom_textpath.html","id":"limitations","dir":"Reference","previous_headings":"","what":"Limitations","title":"Add Curved Text Along Paths in ggplot2 — geom_textpath","text":"limitations inherent plotting text elements ggplot2 due way underlying grid graphics handles text. text string dealt zero-width object, therefore rotation spacing letters making string can dealt treating letter separately. important realise letters rotated, undergo change shape. Thus, example, large text appearing convex curves deformed individual letters narrower bottom wider top. require reinterpreting letters polygons. Another issue may wish use short curved label much longer path. Spacing letters equally along path mean much space letters label remain legible. single text string therefore kept \"together\" according point size text geom_textpath(). leaves problem path text placed. can dealt aesthetic mapping hjust, allows user place labels desired position along path, including separate positions label. final point note path usually group-based geom (.e. path typically comprises x, y points two columns several rows data frame), whereas text labels can come single rows data frame. means data frame x column, y column grouping variable column, can single label group. Typically, grouping variable (see examples, particularly using built-iris data set.)","code":""},{"path":"https://allancameron.github.io/geomtextpath/reference/geom_textpath.html","id":"rich-text","dir":"Reference","previous_headings":"","what":"Rich text","title":"Add Curved Text Along Paths in ggplot2 — geom_textpath","text":"rich text option (rich = TRUE) relies heavily rich-text parsers copied {gridtext} package. thank Claus O. Wilke developing {gridtext} allowing us re-use code MIT licence. Currently, supported HTML tags <p>, <span>, <b>, <strong>, <>, <em>, <sub>, <sup> <br>.","code":""},{"path":"https://allancameron.github.io/geomtextpath/reference/geom_textpath.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Add Curved Text Along Paths in ggplot2 — geom_textpath","text":"geom_textpath() understands following aesthetics (required aesthetics bold): x y label alpha angle colour family fontface group hjust linecolour lineheight linetype linewidth size spacing textcolour vjust `spacing` aesthetic allows fine control spacing text, called 'tracking' typography. default 0 units measured 1/1000 em. Numbers greater zero increase spacing, whereas negative numbers decrease spacing. Learn setting aesthetics  vignette(\"ggplot2-specs\"). addition aforementioned aesthetics, geom_labelpath() also understands following aesthetics related textbox: boxcolour boxlinetype boxlinewidth","code":""},{"path":"https://allancameron.github.io/geomtextpath/reference/geom_textpath.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Curved Text Along Paths in ggplot2 — geom_textpath","text":"","code":"# Plot text along an arbitrary path  t <- seq(-1, 5, length.out = 1000) * pi  spiral <- data.frame(    x = rev(sin(t) * 1000:1),    y = rev(cos(t) * 1000:1),    s = seq(1, 10, length.out = 100),    text = paste(      \"Like a circle in a spiral, like a wheel within a wheel,\",      \"never ending or beginning on an ever spinning reel\"   ) )   ggplot(spiral, aes(x, y, label = text)) +    geom_textpath(size = 7, vjust = 2, linewidth = 0) +    coord_equal(xlim = c(-1500, 1500), ylim = c(-1500, 1500))   # Use geom_textline as a drop-in for geom_line   df <- data.frame(x = rep(1:100, 3),                   y = sin(c(seq(0, pi, len = 100),                             seq(pi, 2*pi, len = 100),                             rep(0, 100))),                   label = rep(c(\"y is increasing\",                                 \"y is falling\",                                 \"y is flat\"), each = 100))  ggplot(df, aes(x, y, label = label, color = label)) +    geom_textline(size = 6) + theme(legend.position = \"none\")   # Rich text labels can contain a subset of HTML tags label <- paste0(   \"Indometacin (\",   \"C<sub>19<\/sub>H<sub>16<\/sub>\",   \"<span style='color:limegreen'>Cl<\/span>\",   \"<span style='color:blue'>N<\/span>\",   \"<span style='color:red'>O<\/span><sub>4<\/sub>\",   \") concentration\" )  # These are interpreted when `rich = TRUE` ggplot(Indometh, aes(time, conc)) +   geom_point() +   geom_labelpath(     label = label,     stat = \"smooth\", formula = y ~ x, method = \"loess\",     vjust = -3, size = 8, rich = TRUE   ) +   scale_x_log10()"},{"path":"https://allancameron.github.io/geomtextpath/reference/geom_textsegment.html","id":null,"dir":"Reference","previous_headings":"","what":"Add text to line segments — geom_textsegment","title":"Add text to line segments — geom_textsegment","text":"geom_textsegment draws line two points defined (x, y) (xend, yend) places text label line. text-placement equivalent geom_segment().","code":""},{"path":"https://allancameron.github.io/geomtextpath/reference/geom_textsegment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add text to line segments — geom_textsegment","text":"","code":"geom_textsegment(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   arrow = NULL,   lineend = \"butt\",   linejoin = \"round\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   straight = NULL )  geom_labelsegment(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   arrow = NULL,   lineend = \"butt\",   linejoin = \"round\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   straight = NULL,   label.r = unit(0.15, \"lines\"),   label.padding = unit(0.25, \"lines\") )"},{"path":"https://allancameron.github.io/geomtextpath/reference/geom_textsegment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add text to line segments — geom_textsegment","text":"mapping Set aesthetic mappings created aes() aes_(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer, string. position Position adjustment, either string, result call position adjustment function. ... arguments passed layer. often aesthetics, used set aesthetic fixed value, like colour = \"red\" size = 3. can also following text-path parameters: gap logical(1) TRUE, breaks path two sections gap either side label. FALSE, path plotted whole. Alternatively, NA, path broken string vjust 0 1, otherwise. default label variant FALSE text variant NA. upright logical(1) TRUE (default), inverts text majority letters upside along path, improve legibility. FALSE, path decides orientation text. halign character(1) describing multi-line text justified. Can either \"center\" (default), \"left\" \"right\". offset unit object length 1 determine offset text path. NULL (default), vjust parameter decides offset. NULL, offset argument overrules vjust setting. parse logical(1) TRUE, coerce labels expressions, allowing plotmath syntax used. padding unit object length 1 determine padding text path gap parameter trims path. text_smoothing numeric(1) value 0 100 smooths text without affecting line portion geom. default value 0 means smoothing applied. rich logical(1) whether interpret text html/markdown formatted rich text. Default: FALSE. See also rich text section details geom_textpath(). remove_long TRUE, labels longer associated path removed. arrow Arrow specification, created grid::arrow(). lineend Line end style (round, butt, square). linejoin Line join style (round, mitre, bevel). na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). straight logical(1) TRUE, keeps letters label straight baseline FALSE (default), lets individual letters follow curve. might helpful noisy paths. label.r Radius rounded corners. Defaults 0.15 lines. label.padding Amount padding around label. Defaults 0.25 lines.","code":""},{"path":"https://allancameron.github.io/geomtextpath/reference/geom_textsegment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add text to line segments — geom_textsegment","text":"Layer ggproto object can added plot.","code":""},{"path":"https://allancameron.github.io/geomtextpath/reference/geom_textsegment.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Add text to line segments — geom_textsegment","text":"geom_textsegment() understands following aesthetics (required aesthetics bold): x y xend yend label alpha angle colour family fontface group hjust linecolour lineheight linetype linewidth size spacing textcolour vjust `spacing` aesthetic allows fine control spacing text, called 'tracking' typography. default 0 units measured 1/1000 em. Numbers greater zero increase spacing, whereas negative numbers decrease spacing. Learn setting aesthetics  vignette(\"ggplot2-specs\").","code":""},{"path":"https://allancameron.github.io/geomtextpath/reference/geom_textsegment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add text to line segments — geom_textsegment","text":"","code":"# The convenience here is that the position and angle # are in sync automatically with the data sleep2 <- reshape(sleep, direction = \"wide\",                   idvar = \"ID\", timevar = \"group\")  ggplot(sleep2, aes(x = \"Drug 1\", y = extra.1)) +   geom_textsegment(     aes(xend = \"Drug 2\", yend = extra.2,         label = paste0(\"Patient #\", ID))   )   # As an annotation ggplot(mapping = aes(x, y)) +   geom_col(     data = data.frame(x = c(1, 2), y = c(1, 10))   ) +   annotate(     \"textsegment\",     x = 1, xend = 2, y = 1, yend = 10,     label = \"10x increase\", arrow = arrow()   )"},{"path":"https://allancameron.github.io/geomtextpath/reference/geom_textsf.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualise sf objects with labels — geom_textsf","title":"Visualise sf objects with labels — geom_textsf","text":"set geom, stat, coord used visualise simple feature (sf) objects. simple plots, need `geom_sf()` uses `stat_sf()` adds `coord_sf()` . `geom_textsf()` unusual geom draw different geometric objects depending simple features present data: can get points, lines, polygons.","code":""},{"path":"https://allancameron.github.io/geomtextpath/reference/geom_textsf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualise sf objects with labels — geom_textsf","text":"","code":"geom_textsf(   mapping = aes(),   data = NULL,   stat = \"sf\",   position = \"identity\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   ... )  geom_labelsf(   mapping = aes(),   data = NULL,   stat = \"sf\",   position = \"identity\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   ... )"},{"path":"https://allancameron.github.io/geomtextpath/reference/geom_textsf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualise sf objects with labels — geom_textsf","text":"mapping Set aesthetic mappings created aes() aes_(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer, string. position Position adjustment, either string, result call position adjustment function. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends?   `NA`, default, includes aesthetics mapped.   `FALSE` never includes, `TRUE` always includes. can also set one \"polygon\", \"line\", \"point\"   override default legend. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). ... Extra arguments passed [`geom_textpath`][geom_textpath]","code":""},{"path":"https://allancameron.github.io/geomtextpath/reference/geom_textsf.html","id":"geometry-aesthetic","dir":"Reference","previous_headings":"","what":"Geometry aesthetic","title":"Visualise sf objects with labels — geom_textsf","text":"`geom_textsf()` uses unique aesthetic: `geometry`, giving column class `sfc` containing simple features data. three ways supply `geometry` aesthetic: - nothing: default `geom_textsf()` assumes stored     `geometry` column.   - Explicitly pass `sf` object `data` argument.     use primary geometry column, matter called.   - Supply using `aes(geometry = my_column)` Unlike aesthetics, `geometry` never inherited plot.","code":""},{"path":"https://allancameron.github.io/geomtextpath/reference/geom_textsf.html","id":"crs","dir":"Reference","previous_headings":"","what":"CRS","title":"Visualise sf objects with labels — geom_textsf","text":"`coord_sf()` ensures layers use common CRS. can either specify using `crs` param, `coord_sf()` take first layer defines CRS.","code":""},{"path":"https://allancameron.github.io/geomtextpath/reference/geom_textsf.html","id":"combining-sf-layers-and-regular-geoms","dir":"Reference","previous_headings":"","what":"Combining sf layers and regular geoms","title":"Visualise sf objects with labels — geom_textsf","text":"regular geoms, [geom_point()], [geom_path()], [geom_text()], [geom_polygon()] etc. work fine `coord_sf()`. However using geoms, two problems arise. First, CRS used x y coordinates used non-sf geoms? CRS applied non-sf geoms set `default_crs` parameter, defaults `NULL`, means positions non-sf geoms interpreted projected coordinates coordinate system set `crs` parameter. setting allows complete control exactly items placed plot canvas, may require understanding projections work generate data projected coordinates. alternative, can set `default_crs = sf::st_crs(4326)`, World Geodetic System 1984 (WGS84). means x y positions interpreted longitude latitude, respectively. can also specify valid CRS default CRS non-sf geoms. second problem arises non-sf geoms straight lines interpreted projected space `default_crs` set `NULL`. approach `coord_sf()` takes break straight lines small pieces (.e., segmentize ) transform pieces projected coordinates. default setting x y interpreted longitude latitude, approach means horizontal lines follow parallels vertical lines follow meridians. need different approach handling straight lines, manually segmentize project coordinates generate plot projected coordinates.","code":""},{"path":[]},{"path":"https://allancameron.github.io/geomtextpath/reference/geom_textsf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualise sf objects with labels — geom_textsf","text":"","code":"ggplot(waterways) +  geom_textsf(label = \"Forth and Clyde Canal\",               hjust = 0.62, vjust = -0.3, fill = \"#E4E0A3\") +  lims(x = c(-4.2, -3.9), y = c(55.9, 56)) #> Warning: The text offset exceeds the curvature in one or more paths. This will result in #> displaced letters. Consider reducing the vjust or text size, or use the hjust #> parameter to move the string to a different point on the path. #> Warning: The text offset exceeds the curvature in one or more paths. This will result in #> displaced letters. Consider reducing the vjust or text size, or use the hjust #> parameter to move the string to a different point on the path. #> Warning: The text offset exceeds the curvature in one or more paths. This will result in #> displaced letters. Consider reducing the vjust or text size, or use the hjust #> parameter to move the string to a different point on the path. #> Warning: The text offset exceeds the curvature in one or more paths. This will result in #> displaced letters. Consider reducing the vjust or text size, or use the hjust #> parameter to move the string to a different point on the path. #> Warning: The text offset exceeds the curvature in one or more paths. This will result in #> displaced letters. Consider reducing the vjust or text size, or use the hjust #> parameter to move the string to a different point on the path. #> Warning: The text offset exceeds the curvature in one or more paths. This will result in #> displaced letters. Consider reducing the vjust or text size, or use the hjust #> parameter to move the string to a different point on the path. #> Warning: The text offset exceeds the curvature in one or more paths. This will result in #> displaced letters. Consider reducing the vjust or text size, or use the hjust #> parameter to move the string to a different point on the path. #> Warning: The text offset exceeds the curvature in one or more paths. This will result in #> displaced letters. Consider reducing the vjust or text size, or use the hjust #> parameter to move the string to a different point on the path. #> Warning: The text offset exceeds the curvature in one or more paths. This will result in #> displaced letters. Consider reducing the vjust or text size, or use the hjust #> parameter to move the string to a different point on the path. #> Warning: The text offset exceeds the curvature in one or more paths. This will result in #> displaced letters. Consider reducing the vjust or text size, or use the hjust #> parameter to move the string to a different point on the path."},{"path":"https://allancameron.github.io/geomtextpath/reference/geom_textsmooth.html","id":null,"dir":"Reference","previous_headings":"","what":"Labelled conditional means in ggplot2 — geom_textsmooth","title":"Labelled conditional means in ggplot2 — geom_textsmooth","text":"Smoothed conditional means available ggplot2 via geom_smooth. geom layer simply adds text label curve follow contour line used drop-replacement geom_smooth","code":""},{"path":"https://allancameron.github.io/geomtextpath/reference/geom_textsmooth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Labelled conditional means in ggplot2 — geom_textsmooth","text":"","code":"geom_textsmooth(   mapping = NULL,   data = NULL,   stat = \"smooth\",   position = \"identity\",   ...,   method = NULL,   formula = NULL,   na.rm = FALSE,   method.args = list(),   orientation = NA,   show.legend = NA,   inherit.aes = TRUE )  geom_labelsmooth(   mapping = NULL,   data = NULL,   stat = \"smooth\",   position = \"identity\",   method = NULL,   formula = NULL,   na.rm = FALSE,   method.args = list(),   orientation = NA,   show.legend = NA,   inherit.aes = TRUE,   ... )"},{"path":"https://allancameron.github.io/geomtextpath/reference/geom_textsmooth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Labelled conditional means in ggplot2 — geom_textsmooth","text":"mapping Set aesthetic mappings created aes() aes_(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat Use override default connection geom_smooth() stat_smooth(). position Position adjustment, either string, result call position adjustment function. ... arguments passed layer. often aesthetics, used set aesthetic fixed value, like colour = \"red\" size = 3. can also following text-path parameters: gap logical(1) TRUE, breaks path two sections gap either side label. FALSE, path plotted whole. Alternatively, NA, path broken string vjust 0 1, otherwise. default label variant FALSE text variant NA. upright logical(1) TRUE (default), inverts text majority letters upside along path, improve legibility. FALSE, path decides orientation text. halign character(1) describing multi-line text justified. Can either \"center\" (default), \"left\" \"right\". offset unit object length 1 determine offset text path. NULL (default), vjust parameter decides offset. NULL, offset argument overrules vjust setting. parse logical(1) TRUE, coerce labels expressions, allowing plotmath syntax used. straight logical(1) TRUE, keeps letters label straight baseline FALSE (default), lets individual letters follow curve. might helpful noisy paths. padding unit object length 1 determine padding text path gap parameter trims path. text_smoothing numeric(1) value 0 100 smooths text without affecting line portion geom. default value 0 means smoothing applied. rich logical(1) whether interpret text html/markdown formatted rich text. Default: FALSE. See also rich text section details geom_textpath(). remove_long TRUE, labels longer associated path removed. method Smoothing method (function) use, accepts either NULL character vector, e.g. \"lm\", \"glm\", \"gam\", \"loess\" function, e.g. MASS::rlm mgcv::gam, stats::lm, stats::loess. \"auto\" also accepted backwards compatibility.  equivalent NULL. method = NULL smoothing method chosen based size largest group (across panels). stats::loess() used less 1,000 observations; otherwise mgcv::gam() used formula = y ~ s(x, bs = \"cs\") method = \"REML\". Somewhat anecdotally, loess gives better appearance, \\(O(N^{2})\\) memory, work larger datasets. fewer 1,000 observations want use gam() model method = NULL use, set method = \"gam\", formula = y ~ s(x, bs = \"cs\"). formula Formula use smoothing function, eg. y ~ x, y ~ poly(x, 2), y ~ log(x). NULL default, case method = NULL implies formula = y ~ x fewer 1,000 observations formula = y ~ s(x, bs = \"cs\") otherwise. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. method.args List additional arguments passed modelling function defined method. orientation orientation layer. default (NA) automatically determines orientation aesthetic mapping. rare event fails can given explicitly setting orientation either \"x\" \"y\". See Orientation section detail. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders().","code":""},{"path":"https://allancameron.github.io/geomtextpath/reference/geom_textsmooth.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Labelled conditional means in ggplot2 — geom_textsmooth","text":"geom_text_density() understands following aesthetics (required aesthetics bold): x label alpha angle colour family fontface group hjust linecolour lineheight linetype linewidth size spacing textcolour vjust `spacing` aesthetic allows fine control spacing text, called 'tracking' typography. default 0 units measured 1/1000 em. Numbers greater zero increase spacing, whereas negative numbers decrease spacing. Learn setting aesthetics  vignette(\"ggplot2-specs\").","code":""},{"path":"https://allancameron.github.io/geomtextpath/reference/geom_textsmooth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Labelled conditional means in ggplot2 — geom_textsmooth","text":"","code":"ggplot(iris, aes(x = Sepal.Length, y = Petal.Length)) +   geom_point(alpha = 0.1) +   geom_textsmooth(aes(label = Species, colour = Species),                 method = \"loess\", formula = y ~ x,                 size = 7, linetype = 3, fontface = 2, linewidth = 1) +   scale_colour_manual(values = c(\"forestgreen\", \"deepskyblue4\", \"tomato4\")) +   theme_bw() +   theme(legend.position = \"none\")"},{"path":"https://allancameron.github.io/geomtextpath/reference/geomtextpath-package.html","id":null,"dir":"Reference","previous_headings":"","what":"geomtextpath: Use Curved Text in Ggplot2 — geomtextpath-package","title":"geomtextpath: Use Curved Text in Ggplot2 — geomtextpath-package","text":"Allows text follow curved paths ggplot2. allows neat labelling curves plots polar co-ordinates.","code":""},{"path":[]},{"path":"https://allancameron.github.io/geomtextpath/reference/geomtextpath-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"geomtextpath: Use Curved Text in Ggplot2 — geomtextpath-package","text":"Maintainer: Allan Cameron Allan.Cameron@nhs.scot Authors: Teun van den Brand tahvdbrand@gmail.com (ORCID)","code":""},{"path":"https://allancameron.github.io/geomtextpath/reference/scale_hjust_discrete.html","id":null,"dir":"Reference","previous_headings":"","what":"justification scales — scale_hjust_discrete","title":"justification scales — scale_hjust_discrete","text":"Sometimes text labels adjacent lines can clash lines well separated vertically. One option controlling use hjust vjust scale place label different position path, either vertically (vjust) horizontally (hjust).","code":""},{"path":"https://allancameron.github.io/geomtextpath/reference/scale_hjust_discrete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"justification scales — scale_hjust_discrete","text":"","code":"scale_hjust_discrete(..., range = c(0, 1), guide = \"none\")  scale_hjust_manual(   ...,   values,   breaks = waiver(),   guide = \"none\",   na.value = NA )  scale_hjust_identity(..., guide = \"none\")  scale_vjust_discrete(..., guide = \"none\", range = c(-0.5, 1.5))  scale_vjust_manual(   ...,   values,   breaks = waiver(),   guide = \"none\",   na.value = NA )  scale_vjust_identity(..., guide = \"none\")"},{"path":"https://allancameron.github.io/geomtextpath/reference/scale_hjust_discrete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"justification scales — scale_hjust_discrete","text":"... arguments passed [continuous_scale()], [binned_scale], [discrete_scale()] appropriate, control name, limits, breaks, labels forth. range Output range hjust vjust. Must lie 0 1 hjust. guide function used create guide name. See [guides()] information. values set aesthetic values map data values . values matched order (usually alphabetical) limits scale, breaks provided. named vector, values matched based names instead. Data values match given na.value. breaks One : - `NULL` breaks - `waiver()` default breaks computed   [transformation object][scales::trans_new()] - numeric vector positions - function takes limits input returns breaks   output (e.g., function returned [scales::extended_breaks()]).   Also accepts rlang [lambda][rlang::as_function()] function notation. na.value Missing values replaced value.","code":""},{"path":"https://allancameron.github.io/geomtextpath/reference/scale_hjust_discrete.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"justification scales — scale_hjust_discrete","text":"simplest way separate labels  adding `scale_hjust_discrete()` `scale_vjust_discrete()` plot, can get control `scale_hjust_manual` `scale_vjust_manual`.","code":""},{"path":"https://allancameron.github.io/geomtextpath/reference/scale_hjust_discrete.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"justification scales — scale_hjust_discrete","text":"","code":"ggplot(iris, aes(Sepal.Length, color = Species)) +   geom_textdensity(aes(label = Species, hjust = Species), size = 6) +   scale_hjust_discrete()"},{"path":"https://allancameron.github.io/geomtextpath/reference/static_text_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Set static parameters — static_text_params","title":"Set static parameters — static_text_params","text":"sets parameters text path expected change construction grob.","code":""},{"path":"https://allancameron.github.io/geomtextpath/reference/static_text_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set static parameters — static_text_params","text":"","code":"static_text_params(   .type = \"text\",   text_only = FALSE,   gap = NULL,   upright = TRUE,   halign = \"center\",   offset = NULL,   parse = FALSE,   straight = FALSE,   padding = unit(0.05, \"inch\"),   text_smoothing = 0,   rich = FALSE,   remove_long = FALSE )"},{"path":"https://allancameron.github.io/geomtextpath/reference/static_text_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set static parameters — static_text_params","text":".type character(1) either \"text\" \"label\", decides default going gap argument. \"text\" default NA, means dynamically decide. \"label\", \"gap\" argument default FALSE. text_only logical(1) indicating whether path part plotted along text (FALSE, default). TRUE, parameters aesthetics relating drawing path ignored. gap logical(1) TRUE, breaks path two sections gap either side label. FALSE, path plotted whole. Alternatively, NA, path broken string vjust 0 1, otherwise. default label variant FALSE text variant NA. upright logical(1) TRUE (default), inverts text majority letters upside along path, improve legibility. FALSE, path decides orientation text. halign character(1) describing multi-line text justified. Can either \"center\" (default), \"left\" \"right\". offset unit object length 1 determine offset text path. NULL (default), vjust parameter decides offset. NULL, offset argument overrules vjust setting. parse logical(1) TRUE, coerce labels expressions, allowing plotmath syntax used. straight logical(1) TRUE, keeps letters label straight baseline FALSE (default), lets individual letters follow curve. might helpful noisy paths. padding unit object length 1 determine padding text path gap parameter trims path. text_smoothing numeric(1) value 0 100 smooths text without affecting line portion geom. default value 0 means smoothing applied. rich logical(1) whether interpret text html/markdown formatted rich text. Default: FALSE. See also rich text section details geom_textpath(). remove_long TRUE, labels longer associated path removed.","code":""},{"path":"https://allancameron.github.io/geomtextpath/reference/static_text_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set static parameters — static_text_params","text":"list parameters.","code":""},{"path":"https://allancameron.github.io/geomtextpath/reference/textpathGrob.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw text on a path. — textpathGrob","title":"Draw text on a path. — textpathGrob","text":"function creates (curved) text path.","code":""},{"path":"https://allancameron.github.io/geomtextpath/reference/textpathGrob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw text on a path. — textpathGrob","text":"","code":"textpathGrob(   label,   x = 0.5,   y = 0.5,   id = 1L,   just = \"centre\",   hjust = NULL,   vjust = NULL,   halign = \"left\",   angle = 0,   straight = FALSE,   rich = FALSE,   gp_text = gpar(),   gp_path = gpar(),   gp_box = gpar(),   gap = NA,   upright = TRUE,   text_smoothing = 0,   polar_params = NULL,   padding = unit(0.05, \"inch\"),   label.padding = unit(0.25, \"lines\"),   label.r = unit(0.15, \"lines\"),   remove_long = FALSE,   arrow = NULL,   default.units = \"npc\",   name = NULL,   vp = NULL,   as_label = FALSE )"},{"path":"https://allancameron.github.io/geomtextpath/reference/textpathGrob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw text on a path. — textpathGrob","text":"label character vector. x numeric vector. y numeric vector. id numeric vector used separate locations x y multiple lines. locations id belong line. just justification text     relative (x, y) location.  two values, first     value specifies horizontal justification second value specifies     vertical justification.  Possible string values : \"left\",     \"right\", \"centre\", \"center\", \"bottom\",     \"top\".  numeric values, 0 means left (bottom) alignment     1 means right (top) alignment. hjust numeric vector specifying horizontal justification.     specified, overrides just setting. vjust numeric vector specifying justification orthogonal direction text. Alternatively unit() object directly set offset path. halign character(1) describing multi-line text justified. Can either \"center\" (default), \"left\" \"right\". angle numeric vector either length 1 length id describing angle degrees text rotated. straight logical(1) TRUE, keeps letters label straight baseline FALSE (default), lets individual letters follow curve. might helpful noisy paths. rich logical(1) whether interpret text html/markdown formatted rich text. Default: FALSE. See also rich text section details geom_textpath(). gp_text, gp_path object class \"gpar\", typically output call gpar() function. basically lists graphical parameters text path respectively. gp_box (Optional) object class \"gpar\", typically output call gpar() function. empty list, text box drawn. gap logical(1) TRUE, breaks path two sections gap either side label. FALSE, path plotted whole. Alternatively, NA, path broken string vjust 0 1, otherwise. default label variant FALSE text variant NA. upright logical(1) TRUE (default), inverts text majority letters upside along path, improve legibility. FALSE, path decides orientation text. text_smoothing numeric(1) value 0 100 smooths text without affecting line portion geom. default value 0 means smoothing applied. polar_params list consisting x, y, r component specifies central point radius circle around single-point labels wrapped. padding unit object length 1 determine padding text path gap parameter trims path. label.padding Amount padding around label. Defaults 0.25 lines. label.r Radius rounded corners. Defaults 0.15 lines. remove_long TRUE, labels longer associated path removed. arrow Arrow specification, created arrow(). default.units string indicating default units use     x y     given numeric vectors. name character identifier. vp Grid viewport object (NULL). as_label logical TRUE FALSE indicating whether text drawn inside text box. FALSE, parameters label.padding, label.r gp_box ignored.","code":""},{"path":"https://allancameron.github.io/geomtextpath/reference/textpathGrob.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw text on a path. — textpathGrob","text":"object class gTree, containing grobs.","code":""},{"path":"https://allancameron.github.io/geomtextpath/reference/textpathGrob.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw text on a path. — textpathGrob","text":"","code":"require(grid) #> Loading required package: grid  t <- seq(0, 2 * pi, length.out = 100) grob <- textpathGrob(   label = c(     \"Why I am making trigonometry jokes? Cos I can!\",     \"I was never any good at sine language.\"   ),   x = c(t, t) / (2 * pi),   y = c(cos(t), sin(t)) * 0.25 + 0.5,   id = rep(1:2, each = length(t)),   vjust = rep(0.5, 2 * length(t)),   gp_text = gpar(lineheight = c(1.2, 1.2), fontsize = c(10, 10)),   gp_path = gpar(lty = c(1, 2)) )  grid.newpage(); grid.draw(grob)"},{"path":"https://allancameron.github.io/geomtextpath/reference/waterways.html","id":null,"dir":"Reference","previous_headings":"","what":"A simple features data frame of three Scottish waterways — waterways","title":"A simple features data frame of three Scottish waterways — waterways","text":"`sf` object showing River Clyde, River Forth, canal joining two.","code":""},{"path":"https://allancameron.github.io/geomtextpath/reference/waterways.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A simple features data frame of three Scottish waterways — waterways","text":"","code":"waterways"},{"path":"https://allancameron.github.io/geomtextpath/reference/waterways.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A simple features data frame of three Scottish waterways — waterways","text":"data frame 4 rows 3 variables name name geographic object type type geographic object geometry sfc objects","code":""},{"path":"https://allancameron.github.io/geomtextpath/reference/waterways.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A simple features data frame of three Scottish waterways — waterways","text":"Contains Ordnance Survey data © Crown copyright database right 2010-19","code":""},{"path":"https://allancameron.github.io/geomtextpath/news/index.html","id":"geomtextpath-010","dir":"Changelog","previous_headings":"","what":"geomtextpath 0.1.0","title":"geomtextpath 0.1.0","text":"Added NEWS.md file track changes package. Plot text atop curve readability purposes. Support lineend, linejoin, linemitre parameters. Letter angles now stable regardless aspect ratios recomputed plot device resized (#6) Line breaks now implemented (#4) Added support user-defined text spacing. Text angles now correct straight paths. Duplicated labels now allowed. Multi-line text can justified horizontally using halign parameter. Added support bidirectional text composite Unicode glyphs Added plotmath support Added coord_curvedpolar curved polar axis labels Labels single points now placed paths allow curve polar co-ordinates. means geom_textpath can used drop-geom_text circumstances. Added geom_textcontour geom_textdensity2d labelled contour plots","code":""}]
